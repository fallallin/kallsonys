package co.com.kallsonys.esb.vendor;

public class FactoriesQuotesOrdersPortTypeImpl implements FactoriesQuotesOrdersPortType {
	
	enum ShipmentCompanies {
		SONY,
		RS
	}

	@Override
	public ValidateOrderQuoteRs validateOrderQuote(ValidateOrderQuoteRq validateOrderQuoteRq)
			throws ValidateOrderQuoteFault1 {
		ValidateOrderQuoteRs resp = new ValidateOrderQuoteRs();
		String vendor = validateOrderQuoteRq.getProductVendorCompanyInfo().getProductVendorCompanyId().value();

		switch (ShipmentCompanies.valueOf( vendor )) {
		case SONY:
			resp = validateOrderSony(validateOrderQuoteRq);
			break;
		case RS:
			resp = validateOrderRapidService(validateOrderQuoteRq);
			break;
		default:
			throw new ValidateOrderQuoteFault1("No existe un convenio con el proveedor " + vendor);
		}
		return resp;
	}

	@Override
	public FactoryQuotesOrderRs factoryQuotesOrder(FactoryQuotesOrderRq factoryQuotesOrderRq)
			throws FactoryQuotesOrderFault1 {
		FactoryQuotesOrderRs resp = new FactoryQuotesOrderRs();
		String vendor = factoryQuotesOrderRq.getProductVendorCompanyInfo().getProductVendorCompanyId().value();

		switch (ShipmentCompanies.valueOf( vendor )) {
		case SONY:
			resp = quotesOrderSony(factoryQuotesOrderRq);
			break;
		case RS:
			resp = quotesOrderRapidService(factoryQuotesOrderRq);
			break;
		default:
			throw new FactoryQuotesOrderFault1("No existe un convenio con el proveedor " + vendor);
		}
		return resp;
	}

}

package co.com.kallsonys.esb.vendor;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;

public class FactoriesQuotesOrdersPortTypeImpl implements FactoriesQuotesOrdersPortType {
	
	enum ShipmentCompanies {
		SONY,
		RS
	}
	
	@Override
	public FactoryQuotesOrderRs factoryQuotesOrder(FactoryQuotesOrderRq factoryQuotesOrderRq)
			throws FactoryQuotesOrderFault1 {
		FactoryQuotesOrderRs resp = new FactoryQuotesOrderRs();
		String vendor = factoryQuotesOrderRq.getProductVendorCompanyInfo().getProductVendorCompanyId().value();

		switch (ShipmentCompanies.valueOf( vendor )) {
		case SONY:
			resp = quotesOrderSony(factoryQuotesOrderRq);
			break;
		case RS:
			resp = quotesOrderRapidService(factoryQuotesOrderRq);
			break;
		default:
			throw new FactoryQuotesOrderFault1("No existe un convenio con el proveedor " + vendor);
		}
		return resp;
	}
	
	private FactoryQuotesOrderRs quotesOrderSony(FactoryQuotesOrderRq factoryQuotesOrderRq) {
		FactoryQuotesOrderRs resp = new FactoryQuotesOrderRs();
		try {
			URL url = new URL("http://localhost:9191/vendor/sony/quotesorder");
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setDoOutput(true);
			conn.setRequestMethod("POST");
			conn.setRequestProperty("Content-Type", "application/json");
			
			StringBuffer input = new StringBuffer();
			input.append("{");
			input.append("\"orderId\":\"" + factoryQuotesOrderRq.getOrderInfo().getOrderId() + "\",");
			input.append("\"items\": [ ");

			for (Item item : factoryQuotesOrderRq.getOrderInfo().getItems()) {
				input.append("{ ");
				input.append("\"itemId\":\"" + item.getItemId() + "\",");
				input.append("\"quantity\":" + item.getQuantity());
				input.append("},");
			}
			
			if (input.lastIndexOf(",") == input.length()-1) {
				input.replace(input.length()-1, input.length(), "]");
			} else {
				input.append("]");
			}
			
			input.append("}");
							
			OutputStream os = conn.getOutputStream();
			os.write(input.toString().getBytes());
			os.flush();
			
			if (conn.getResponseCode() != HttpURLConnection.HTTP_OK) {
				throw new RuntimeException("HTTP error code : "
					+ conn.getResponseCode());
			}

			BufferedReader br = new BufferedReader(new InputStreamReader(
					(conn.getInputStream())));

			String output;
			StringBuffer xml = new StringBuffer();
			while ((output = br.readLine()) != null) {
				xml.append(output);
			}
			conn.disconnect();
			
			// Parseo
			org.json.JSONObject jsonObject = new org.json.JSONObject(xml.toString());
			if (!jsonObject.isNull("errorMessage")) {
				throw new FactoryQuotesOrderFault1(jsonObject.get("errorMessage").toString());
			}
			
			// Respuesta
			String[] nameRoot = org.json.JSONObject.getNames(jsonObject);
			org.json.JSONObject jsonChild = (org.json.JSONObject) jsonObject.get(nameRoot[0]);
			resp.setResult(Boolean.parseBoolean(jsonChild.get("result/supplierPrice").toString()));
		} catch (Exception e) {
			throw new FactoryQuotesOrderFault1(e.getMessage());
		}
		return resp;
	}

	private FactoryQuotesOrderRs quotesOrderRapidService(FactoryQuotesOrderRq factoryQuotesOrderRq) {
		// TODO Auto-generated method stub
		return null;
	}

	

	@Override
	public ValidateOrderQuoteRs validateOrderQuote(ValidateOrderQuoteRq validateOrderQuoteRq)
			throws ValidateOrderQuoteFault1 {
		ValidateOrderQuoteRs resp = new ValidateOrderQuoteRs();
		String vendor = validateOrderQuoteRq.getProductVendorCompanyInfo().getProductVendorCompanyId().value();

		switch (ShipmentCompanies.valueOf( vendor )) {
		case SONY:
			resp = validateOrderSony(validateOrderQuoteRq);
			break;
		case RS:
			resp = validateOrderRapidService(validateOrderQuoteRq);
			break;
		default:
			throw new ValidateOrderQuoteFault1("No existe un convenio con el proveedor " + vendor);
		}
		return resp;
	}

	private ValidateOrderQuoteRs validateOrderRapidService(ValidateOrderQuoteRq validateOrderQuoteRq) {
		// TODO Auto-generated method stub
		return null;
	}

	private ValidateOrderQuoteRs validateOrderSony(ValidateOrderQuoteRq validateOrderQuoteRq) {
		// TODO Auto-generated method stub
		return null;
	}
}

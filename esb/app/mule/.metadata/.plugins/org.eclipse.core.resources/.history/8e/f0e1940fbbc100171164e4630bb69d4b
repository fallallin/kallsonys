package co.com.kallsonys.esb.vendor;

import co.com.kallsonys.esb.shipment.FulfillShipmentFault1;
import co.com.kallsonys.esb.shipment.FulfillShipmentRs;
import co.com.kallsonys.esb.shipment.ShipmentCompanyPortTypeImpl.ShipmentCompanies;

public class FactoriesQuotesOrdersPortTypeImpl implements FactoriesQuotesOrdersPortType {
	
	enum ShipmentCompanies {
		SONY,
		RS
	}

	@Override
	public ValidateOrderQuoteRs validateOrderQuote(ValidateOrderQuoteRq validateOrderQuoteRq)
			throws ValidateOrderQuoteFault1 {
		ValidateOrderQuoteRs resp = new ValidateOrderQuoteRs();
		String shipmentCompany = validateOrderQuoteRq.getProductVendorCompanyInfo().getProductVendorCompanyId();

		switch (ShipmentCompanies.valueOf( shipmentCompany )) {
		case DHL:
			resp = shipmentCompanyDHL(fulfillShipmentRq);
			break;
		case SERVIENTREGA:
			resp = shipmentCompanyServientrega(fulfillShipmentRq);
			break;
		case DEPRISA:
			resp = shipmentCompanyDeprisa(fulfillShipmentRq);
			break;
		default:
			throw new FulfillShipmentFault1("No existe un convenio con la empresa de envios " + shipmentCompany);
		}
		return resp;
	}

	@Override
	public FactoryQuotesOrderRs factoryQuotesOrder(FactoryQuotesOrderRq factoryQuotesOrderRq)
			throws FactoryQuotesOrderFault1 {
		// TODO Auto-generated method stub
		return null;
	}

}

<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="3b4362cb-a67f-41a6-b2a4-16cfd695157a" activeEnvironment="Default" name="Contrato_regla_ventas" resourceRoot="" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="2fa23e02-d557-4865-a5fb-3fec9b7b15de" wsaVersion="NONE" name="DEFAULT_ReglasKallSonysSoapBinding" type="wsdl" bindingName="{http://DefaultNamespace}DEFAULT_ReglasKallSonysSoapBinding" soapVersion="1_1" anonymous="optional" definition="file:/D:/workspacePUJ/GitHub/kallsonys/esb/wsdl/02_BACKEND/04_BRMS/Contrato_regla_ventas.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:\D:\workspacePUJ\GitHub\kallsonys\esb\wsdl\02_BACKEND\04_BRMS\Contrato_regla_ventas.wsdl"><con:part><con:url>file:\D:\workspacePUJ\GitHub\kallsonys\esb\wsdl\02_BACKEND\04_BRMS\Contrato_regla_ventas.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="DEFAULT_ReglasKallSonys" targetNamespace="http://DefaultNamespace" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://DefaultNamespace" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http">
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://lang.java" xmlns:tns="http://lang.java">
      <xsd:complexType name="Iterable">
        <xsd:sequence/>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://cxf.apache.org/arrays" xmlns:tns="http://cxf.apache.org/arrays">
      <xsd:complexType name="ArrayOfArrayOfAnyType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="ArrayOfAnyType" nillable="true" type="tns:ArrayOfAnyType"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfAnyType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="anyType" nillable="true" type="xsd:anyType"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://DefaultNamespace" xmlns:ns4="http://properties.table.rules.openl.org" xmlns:ns3="http://context.rules.openl.org" xmlns:ns2="http://table.rules.openl.org" xmlns:ns1="http://binding.openl.org" xmlns:ns0="http://types.openl.org">
      <xsd:import namespace="http://types.openl.org"/>
      <xsd:import namespace="http://binding.openl.org"/>
      <xsd:import namespace="http://table.rules.openl.org"/>
      <xsd:import namespace="http://context.rules.openl.org"/>
      <xsd:import namespace="http://properties.table.rules.openl.org"/>
      <xsd:complexType name="string2IOpenFieldMap">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="entry">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="key" type="xsd:string"/>
                <xsd:element minOccurs="0" name="value" type="ns0:IOpenField"/>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="IOpenField2IBoundNodeMap">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="entry">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="key" type="ns0:IOpenField"/>
                <xsd:element minOccurs="0" name="value" type="ns1:IBoundNode"/>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="IBoundNode2IOpenFieldMap">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="entry">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="key" type="ns1:IBoundNode"/>
                <xsd:element minOccurs="0" name="value" type="ns0:IOpenField"/>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="string2PointMap">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="entry">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="key" type="xsd:string"/>
                <xsd:element minOccurs="0" name="value" type="ns2:Point"/>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="string2IOpenClassMap">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="entry">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="key" type="xsd:string"/>
                <xsd:element minOccurs="0" name="value" type="ns0:IOpenClass"/>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="string2anyTypeMap">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="entry">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="key" type="xsd:string"/>
                <xsd:element minOccurs="0" name="value" type="xsd:anyType"/>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="IOpenClass2IBoundNodeMap">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="entry">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="key" type="ns0:IOpenClass"/>
                <xsd:element minOccurs="0" name="value" type="ns1:IBoundNode"/>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfString">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="string" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="MontoMaximo" type="tns:MontoMaximo"/>
      <xsd:complexType name="MontoMaximo">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="runtimeContext" type="ns3:IRulesRuntimeContext"/>
          <xsd:element minOccurs="0" name="monto" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="MontoMaximoResponse" type="tns:MontoMaximoResponse"/>
      <xsd:complexType name="MontoMaximoResponse">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="return" nillable="true" type="xsd:decimal"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ValidacionTarjeta" type="tns:ValidacionTarjeta"/>
      <xsd:complexType name="ValidacionTarjeta">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="runtimeContext" type="ns3:IRulesRuntimeContext"/>
          <xsd:element minOccurs="0" name="monto" nillable="true" type="xsd:double"/>
          <xsd:element minOccurs="0" name="tipoTarjeta" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ValidacionTarjetaResponse" type="tns:ValidacionTarjetaResponse"/>
      <xsd:complexType name="ValidacionTarjetaResponse">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="return" nillable="true" type="xsd:boolean"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="getPresupuestoGerencia" type="tns:getPresupuestoGerencia"/>
      <xsd:complexType name="getPresupuestoGerencia">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="arg0" type="ns3:IRulesRuntimeContext"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="getPresupuestoGerenciaResponse" type="tns:getPresupuestoGerenciaResponse"/>
      <xsd:complexType name="getPresupuestoGerenciaResponse">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="return" type="ns4:TableProperties"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://text.util.openl.org" xmlns:tns="http://text.util.openl.org">
      <xsd:complexType name="IPosition">
        <xsd:sequence/>
      </xsd:complexType>
      <xsd:complexType name="ILocation">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="end" nillable="true" type="tns:IPosition"/>
          <xsd:element minOccurs="0" name="start" nillable="true" type="tns:IPosition"/>
          <xsd:element minOccurs="0" name="textLocation" type="xsd:boolean"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://source.openl.org" xmlns:tns="http://source.openl.org" xmlns:ns1="http://DefaultNamespace" xmlns:ns0="http://io.java">
      <xsd:import namespace="http://io.java"/>
      <xsd:import namespace="http://DefaultNamespace"/>
      <xsd:complexType name="IOpenSourceCodeModule">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="byteStream" nillable="true" type="ns0:InputStream"/>
          <xsd:element minOccurs="0" name="characterStream" nillable="true" type="ns0:Reader"/>
          <xsd:element minOccurs="0" name="code" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="modified" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="params" nillable="true" type="ns1:string2anyTypeMap"/>
          <xsd:element minOccurs="0" name="startPosition" type="xsd:int"/>
          <xsd:element minOccurs="0" name="uri" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://enumeration.rules.openl.org" xmlns:tns="http://enumeration.rules.openl.org">
      <xsd:complexType name="ArrayOfCurrenciesEnum">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="CurrenciesEnum" nillable="true" type="tns:CurrenciesEnum"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCaRegionsEnum">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="CaRegionsEnum" nillable="true" type="tns:CaRegionsEnum"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfUsRegionsEnum">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="UsRegionsEnum" nillable="true" type="tns:UsRegionsEnum"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="UsStatesEnum">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="AL"/>
          <xsd:enumeration value="AK"/>
          <xsd:enumeration value="AZ"/>
          <xsd:enumeration value="AR"/>
          <xsd:enumeration value="CA"/>
          <xsd:enumeration value="CO"/>
          <xsd:enumeration value="CT"/>
          <xsd:enumeration value="DC"/>
          <xsd:enumeration value="DE"/>
          <xsd:enumeration value="FL"/>
          <xsd:enumeration value="GA"/>
          <xsd:enumeration value="HI"/>
          <xsd:enumeration value="ID"/>
          <xsd:enumeration value="IL"/>
          <xsd:enumeration value="IN"/>
          <xsd:enumeration value="IA"/>
          <xsd:enumeration value="KS"/>
          <xsd:enumeration value="KY"/>
          <xsd:enumeration value="LA"/>
          <xsd:enumeration value="ME"/>
          <xsd:enumeration value="MD"/>
          <xsd:enumeration value="MA"/>
          <xsd:enumeration value="MI"/>
          <xsd:enumeration value="MN"/>
          <xsd:enumeration value="MS"/>
          <xsd:enumeration value="MO"/>
          <xsd:enumeration value="MT"/>
          <xsd:enumeration value="NE"/>
          <xsd:enumeration value="NV"/>
          <xsd:enumeration value="NH"/>
          <xsd:enumeration value="NJ"/>
          <xsd:enumeration value="NM"/>
          <xsd:enumeration value="NY"/>
          <xsd:enumeration value="NC"/>
          <xsd:enumeration value="ND"/>
          <xsd:enumeration value="OH"/>
          <xsd:enumeration value="OK"/>
          <xsd:enumeration value="OR"/>
          <xsd:enumeration value="PA"/>
          <xsd:enumeration value="PR"/>
          <xsd:enumeration value="RI"/>
          <xsd:enumeration value="SC"/>
          <xsd:enumeration value="SD"/>
          <xsd:enumeration value="TN"/>
          <xsd:enumeration value="TX"/>
          <xsd:enumeration value="UT"/>
          <xsd:enumeration value="VT"/>
          <xsd:enumeration value="VA"/>
          <xsd:enumeration value="WA"/>
          <xsd:enumeration value="WV"/>
          <xsd:enumeration value="WI"/>
          <xsd:enumeration value="WY"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CurrenciesEnum">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="ALL"/>
          <xsd:enumeration value="DZD"/>
          <xsd:enumeration value="ARS"/>
          <xsd:enumeration value="AUD"/>
          <xsd:enumeration value="BHD"/>
          <xsd:enumeration value="BYR"/>
          <xsd:enumeration value="BOB"/>
          <xsd:enumeration value="BAM"/>
          <xsd:enumeration value="BRL"/>
          <xsd:enumeration value="CAD"/>
          <xsd:enumeration value="CLP"/>
          <xsd:enumeration value="CNY"/>
          <xsd:enumeration value="COP"/>
          <xsd:enumeration value="CRC"/>
          <xsd:enumeration value="HRK"/>
          <xsd:enumeration value="CZK"/>
          <xsd:enumeration value="DKK"/>
          <xsd:enumeration value="DOP"/>
          <xsd:enumeration value="EGP"/>
          <xsd:enumeration value="EUR"/>
          <xsd:enumeration value="GTQ"/>
          <xsd:enumeration value="HNL"/>
          <xsd:enumeration value="HKD"/>
          <xsd:enumeration value="HUF"/>
          <xsd:enumeration value="ISK"/>
          <xsd:enumeration value="INR"/>
          <xsd:enumeration value="IDR"/>
          <xsd:enumeration value="IQD"/>
          <xsd:enumeration value="ILS"/>
          <xsd:enumeration value="JPY"/>
          <xsd:enumeration value="JOD"/>
          <xsd:enumeration value="KWD"/>
          <xsd:enumeration value="LVL"/>
          <xsd:enumeration value="LBP"/>
          <xsd:enumeration value="LTL"/>
          <xsd:enumeration value="MKD"/>
          <xsd:enumeration value="MYR"/>
          <xsd:enumeration value="MXN"/>
          <xsd:enumeration value="MAD"/>
          <xsd:enumeration value="NZD"/>
          <xsd:enumeration value="NIO"/>
          <xsd:enumeration value="NOK"/>
          <xsd:enumeration value="OMR"/>
          <xsd:enumeration value="PAB"/>
          <xsd:enumeration value="PYG"/>
          <xsd:enumeration value="PEN"/>
          <xsd:enumeration value="PHP"/>
          <xsd:enumeration value="PLN"/>
          <xsd:enumeration value="QAR"/>
          <xsd:enumeration value="RON"/>
          <xsd:enumeration value="RUB"/>
          <xsd:enumeration value="SAR"/>
          <xsd:enumeration value="RSD"/>
          <xsd:enumeration value="SGD"/>
          <xsd:enumeration value="ZAR"/>
          <xsd:enumeration value="SDG"/>
          <xsd:enumeration value="SEK"/>
          <xsd:enumeration value="CHF"/>
          <xsd:enumeration value="SYP"/>
          <xsd:enumeration value="TWD"/>
          <xsd:enumeration value="TND"/>
          <xsd:enumeration value="TRY"/>
          <xsd:enumeration value="UAH"/>
          <xsd:enumeration value="AED"/>
          <xsd:enumeration value="GBP"/>
          <xsd:enumeration value="USD"/>
          <xsd:enumeration value="UYU"/>
          <xsd:enumeration value="VEF"/>
          <xsd:enumeration value="VND"/>
          <xsd:enumeration value="YER"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfUsStatesEnum">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="UsStatesEnum" nillable="true" type="tns:UsStatesEnum"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="UsRegionsEnum">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="MW"/>
          <xsd:enumeration value="NE"/>
          <xsd:enumeration value="SE"/>
          <xsd:enumeration value="SW"/>
          <xsd:enumeration value="W"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CaProvincesEnum">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="AB"/>
          <xsd:enumeration value="BC"/>
          <xsd:enumeration value="PE"/>
          <xsd:enumeration value="MB"/>
          <xsd:enumeration value="NB"/>
          <xsd:enumeration value="NS"/>
          <xsd:enumeration value="NU"/>
          <xsd:enumeration value="ON"/>
          <xsd:enumeration value="QC"/>
          <xsd:enumeration value="SK"/>
          <xsd:enumeration value="NL"/>
          <xsd:enumeration value="YT"/>
          <xsd:enumeration value="NT"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="OriginsEnum">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Base"/>
          <xsd:enumeration value="Deviation"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfLanguagesEnum">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="LanguagesEnum" nillable="true" type="tns:LanguagesEnum"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="LanguagesEnum">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="ALB"/>
          <xsd:enumeration value="ARA"/>
          <xsd:enumeration value="BEL"/>
          <xsd:enumeration value="BUL"/>
          <xsd:enumeration value="CAT"/>
          <xsd:enumeration value="CHI"/>
          <xsd:enumeration value="SCR"/>
          <xsd:enumeration value="CZE"/>
          <xsd:enumeration value="DAN"/>
          <xsd:enumeration value="DUT"/>
          <xsd:enumeration value="ENG"/>
          <xsd:enumeration value="FIN"/>
          <xsd:enumeration value="FRE"/>
          <xsd:enumeration value="GER"/>
          <xsd:enumeration value="GRE"/>
          <xsd:enumeration value="HEB"/>
          <xsd:enumeration value="HIN"/>
          <xsd:enumeration value="HUN"/>
          <xsd:enumeration value="IND"/>
          <xsd:enumeration value="GLE"/>
          <xsd:enumeration value="ITA"/>
          <xsd:enumeration value="JPN"/>
          <xsd:enumeration value="LAV"/>
          <xsd:enumeration value="LIT"/>
          <xsd:enumeration value="MAC"/>
          <xsd:enumeration value="MAY"/>
          <xsd:enumeration value="MLT"/>
          <xsd:enumeration value="NOR"/>
          <xsd:enumeration value="POL"/>
          <xsd:enumeration value="POR"/>
          <xsd:enumeration value="RUM"/>
          <xsd:enumeration value="RUS"/>
          <xsd:enumeration value="SCC"/>
          <xsd:enumeration value="SLO"/>
          <xsd:enumeration value="SPA"/>
          <xsd:enumeration value="THA"/>
          <xsd:enumeration value="TUR"/>
          <xsd:enumeration value="UKR"/>
          <xsd:enumeration value="VIE"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="ValidateDTEnum">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="ON"/>
          <xsd:enumeration value="OFF"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="CountriesEnum">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="AL"/>
          <xsd:enumeration value="DZ"/>
          <xsd:enumeration value="AR"/>
          <xsd:enumeration value="AU"/>
          <xsd:enumeration value="AT"/>
          <xsd:enumeration value="BH"/>
          <xsd:enumeration value="BY"/>
          <xsd:enumeration value="BE"/>
          <xsd:enumeration value="BO"/>
          <xsd:enumeration value="BA"/>
          <xsd:enumeration value="BR"/>
          <xsd:enumeration value="BG"/>
          <xsd:enumeration value="CA"/>
          <xsd:enumeration value="CL"/>
          <xsd:enumeration value="CN"/>
          <xsd:enumeration value="CO"/>
          <xsd:enumeration value="CR"/>
          <xsd:enumeration value="HR"/>
          <xsd:enumeration value="CY"/>
          <xsd:enumeration value="CZ"/>
          <xsd:enumeration value="DK"/>
          <xsd:enumeration value="DO"/>
          <xsd:enumeration value="EC"/>
          <xsd:enumeration value="EG"/>
          <xsd:enumeration value="SV"/>
          <xsd:enumeration value="EE"/>
          <xsd:enumeration value="FI"/>
          <xsd:enumeration value="FR"/>
          <xsd:enumeration value="DE"/>
          <xsd:enumeration value="GR"/>
          <xsd:enumeration value="GT"/>
          <xsd:enumeration value="HN"/>
          <xsd:enumeration value="HK"/>
          <xsd:enumeration value="HU"/>
          <xsd:enumeration value="IS"/>
          <xsd:enumeration value="IN"/>
          <xsd:enumeration value="ID"/>
          <xsd:enumeration value="IQ"/>
          <xsd:enumeration value="IE"/>
          <xsd:enumeration value="IL"/>
          <xsd:enumeration value="IT"/>
          <xsd:enumeration value="JP"/>
          <xsd:enumeration value="JO"/>
          <xsd:enumeration value="KW"/>
          <xsd:enumeration value="LV"/>
          <xsd:enumeration value="LB"/>
          <xsd:enumeration value="LT"/>
          <xsd:enumeration value="LU"/>
          <xsd:enumeration value="MK"/>
          <xsd:enumeration value="MY"/>
          <xsd:enumeration value="MT"/>
          <xsd:enumeration value="MX"/>
          <xsd:enumeration value="MA"/>
          <xsd:enumeration value="NL"/>
          <xsd:enumeration value="NZ"/>
          <xsd:enumeration value="NI"/>
          <xsd:enumeration value="NO"/>
          <xsd:enumeration value="OM"/>
          <xsd:enumeration value="PA"/>
          <xsd:enumeration value="PY"/>
          <xsd:enumeration value="PE"/>
          <xsd:enumeration value="PH"/>
          <xsd:enumeration value="PL"/>
          <xsd:enumeration value="PT"/>
          <xsd:enumeration value="PR"/>
          <xsd:enumeration value="QA"/>
          <xsd:enumeration value="RO"/>
          <xsd:enumeration value="RU"/>
          <xsd:enumeration value="SA"/>
          <xsd:enumeration value="CS"/>
          <xsd:enumeration value="SG"/>
          <xsd:enumeration value="SK"/>
          <xsd:enumeration value="SI"/>
          <xsd:enumeration value="ZA"/>
          <xsd:enumeration value="ES"/>
          <xsd:enumeration value="SD"/>
          <xsd:enumeration value="SE"/>
          <xsd:enumeration value="CH"/>
          <xsd:enumeration value="SY"/>
          <xsd:enumeration value="TW"/>
          <xsd:enumeration value="TH"/>
          <xsd:enumeration value="TN"/>
          <xsd:enumeration value="TR"/>
          <xsd:enumeration value="UA"/>
          <xsd:enumeration value="AE"/>
          <xsd:enumeration value="GB"/>
          <xsd:enumeration value="US"/>
          <xsd:enumeration value="UY"/>
          <xsd:enumeration value="VE"/>
          <xsd:enumeration value="VN"/>
          <xsd:enumeration value="YE"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfRegionsEnum">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="RegionsEnum" nillable="true" type="tns:RegionsEnum"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="RegionsEnum">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NCSA"/>
          <xsd:enumeration value="EU"/>
          <xsd:enumeration value="EMEA"/>
          <xsd:enumeration value="APJ"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfCountriesEnum">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="CountriesEnum" nillable="true" type="tns:CountriesEnum"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="CaRegionsEnum">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="QC"/>
          <xsd:enumeration value="HQ"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfCaProvincesEnum">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="CaProvincesEnum" nillable="true" type="tns:CaProvincesEnum"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="RecalculateEnum">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="ALWAYS"/>
          <xsd:enumeration value="NEVER"/>
          <xsd:enumeration value="ANALYZE"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://table.rules.openl.org" xmlns:tns="http://table.rules.openl.org">
      <xsd:complexType name="Point">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="column" type="xsd:int"/>
          <xsd:element minOccurs="0" name="row" type="xsd:int"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://meta.openl.org" xmlns:tns="http://meta.openl.org">
      <xsd:complexType name="IMetaInfo">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="sourceUrl" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://calc.rules.openl.org" xmlns:tns="http://calc.rules.openl.org" xmlns:ns1="http://cxf.apache.org/arrays" xmlns:ns0="http://DefaultNamespace">
      <xsd:import namespace="http://DefaultNamespace"/>
      <xsd:import namespace="http://cxf.apache.org/arrays"/>
      <xsd:complexType name="SpreadsheetResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="columnNames" nillable="true" type="ns0:ArrayOfString"/>
          <xsd:element minOccurs="0" name="columnTitles" nillable="true" type="ns0:ArrayOfString"/>
          <xsd:element minOccurs="0" name="fieldsCoordinates" nillable="true" type="ns0:string2PointMap"/>
          <xsd:element minOccurs="0" name="results" nillable="true" type="ns1:ArrayOfArrayOfAnyType"/>
          <xsd:element minOccurs="0" name="rowNames" nillable="true" type="ns0:ArrayOfString"/>
          <xsd:element minOccurs="0" name="rowTitles" nillable="true" type="ns0:ArrayOfString"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://properties.table.rules.openl.org" xmlns:tns="http://properties.table.rules.openl.org" xmlns:ns2="http://enumeration.rules.openl.org" xmlns:ns1="http://DefaultNamespace" xmlns:ns0="http://impl.types.openl.org">
      <xsd:import namespace="http://DefaultNamespace"/>
      <xsd:import namespace="http://enumeration.rules.openl.org"/>
      <xsd:import namespace="http://impl.types.openl.org"/>
      <xsd:complexType name="TableProperties">
        <xsd:complexContent>
          <xsd:extension base="ns0:DynamicObject">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="active" nillable="true" type="xsd:boolean"/>
              <xsd:element minOccurs="0" name="allDimensionalProperties" nillable="true" type="ns1:string2anyTypeMap"/>
              <xsd:element minOccurs="0" name="allProperties" nillable="true" type="ns1:string2anyTypeMap"/>
              <xsd:element minOccurs="0" name="autoType" nillable="true" type="xsd:boolean"/>
              <xsd:element minOccurs="0" name="buildPhase" nillable="true" type="xsd:string"/>
              <xsd:element minOccurs="0" name="caProvinces" nillable="true" type="ns2:ArrayOfCaProvincesEnum"/>
              <xsd:element minOccurs="0" name="caRegions" nillable="true" type="ns2:ArrayOfCaRegionsEnum"/>
              <xsd:element minOccurs="0" name="cacheable" nillable="true" type="xsd:boolean"/>
              <xsd:element minOccurs="0" name="category" nillable="true" type="xsd:string"/>
              <xsd:element minOccurs="0" name="country" nillable="true" type="ns2:ArrayOfCountriesEnum"/>
              <xsd:element minOccurs="0" name="createdBy" nillable="true" type="xsd:string"/>
              <xsd:element minOccurs="0" name="createdOn" type="xsd:dateTime"/>
              <xsd:element minOccurs="0" name="currency" nillable="true" type="ns2:ArrayOfCurrenciesEnum"/>
              <xsd:element minOccurs="0" name="currentTableType" nillable="true" type="xsd:string"/>
              <xsd:element minOccurs="0" name="custom1" nillable="true" type="ns1:ArrayOfString"/>
              <xsd:element minOccurs="0" name="custom2" nillable="true" type="ns1:ArrayOfString"/>
              <xsd:element minOccurs="0" name="datatypePackage" nillable="true" type="xsd:string"/>
              <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
              <xsd:element minOccurs="0" name="effectiveDate" type="xsd:dateTime"/>
              <xsd:element minOccurs="0" name="endRequestDate" type="xsd:dateTime"/>
              <xsd:element minOccurs="0" name="expirationDate" type="xsd:dateTime"/>
              <xsd:element minOccurs="0" name="externalPropertiesAppliedForModule" nillable="true" type="ns1:string2anyTypeMap"/>
              <xsd:element minOccurs="0" name="failOnMiss" nillable="true" type="xsd:boolean"/>
              <xsd:element minOccurs="0" name="id" nillable="true" type="xsd:string"/>
              <xsd:element minOccurs="0" name="lang" nillable="true" type="ns2:ArrayOfLanguagesEnum"/>
              <xsd:element minOccurs="0" name="lob" nillable="true" type="xsd:string"/>
              <xsd:element minOccurs="0" name="modifiedBy" nillable="true" type="xsd:string"/>
              <xsd:element minOccurs="0" name="modifiedOn" type="xsd:dateTime"/>
              <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
              <xsd:element minOccurs="0" name="origin" nillable="true" type="ns2:OriginsEnum"/>
              <xsd:element minOccurs="0" name="precision" nillable="true" type="xsd:string"/>
              <xsd:element minOccurs="0" name="propertiesAppliedByDefault" nillable="true" type="ns1:string2anyTypeMap"/>
              <xsd:element minOccurs="0" name="propertiesAppliedForCategory" nillable="true" type="ns1:string2anyTypeMap"/>
              <xsd:element minOccurs="0" name="propertiesAppliedForModule" nillable="true" type="ns1:string2anyTypeMap"/>
              <xsd:element minOccurs="0" name="propertiesDefinedInTable" nillable="true" type="ns1:string2anyTypeMap"/>
              <xsd:element minOccurs="0" name="propertiesDefinedInTableIgnoreSystem" nillable="true" type="ns1:string2anyTypeMap"/>
              <xsd:element minOccurs="0" name="propertiesEmpty" type="xsd:boolean"/>
              <xsd:element minOccurs="0" name="recalculate" nillable="true" type="ns2:RecalculateEnum"/>
              <xsd:element minOccurs="0" name="region" nillable="true" type="ns2:ArrayOfRegionsEnum"/>
              <xsd:element minOccurs="0" name="scope" nillable="true" type="xsd:string"/>
              <xsd:element minOccurs="0" name="startRequestDate" type="xsd:dateTime"/>
              <xsd:element minOccurs="0" name="state" nillable="true" type="ns2:ArrayOfUsStatesEnum"/>
              <xsd:element minOccurs="0" name="tags" nillable="true" type="ns1:ArrayOfString"/>
              <xsd:element minOccurs="0" name="transaction" nillable="true" type="ns1:ArrayOfString"/>
              <xsd:element minOccurs="0" name="usregion" nillable="true" type="ns2:ArrayOfUsRegionsEnum"/>
              <xsd:element minOccurs="0" name="validateDT" nillable="true" type="ns2:ValidateDTEnum"/>
              <xsd:element minOccurs="0" name="version" nillable="true" type="xsd:string"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://syntax.openl.org" xmlns:tns="http://syntax.openl.org" xmlns:ns1="http://text.util.openl.org" xmlns:ns0="http://source.openl.org">
      <xsd:import namespace="http://source.openl.org"/>
      <xsd:import namespace="http://text.util.openl.org"/>
      <xsd:complexType name="ISyntaxNode">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="module" nillable="true" type="ns0:IOpenSourceCodeModule"/>
          <xsd:element minOccurs="0" name="numberOfChildren" type="xsd:int"/>
          <xsd:element minOccurs="0" name="parent" nillable="true" type="tns:ISyntaxNode"/>
          <xsd:element minOccurs="0" name="sourceLocation" nillable="true" type="ns1:ILocation"/>
          <xsd:element minOccurs="0" name="type" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://runtime.openl.org" xmlns:tns="http://runtime.openl.org">
      <xsd:complexType name="IRuntimeContext">
        <xsd:sequence/>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://types.openl.org" xmlns:tns="http://types.openl.org" xmlns:ns5="http://syntax.openl.org" xmlns:ns4="http://binding.openl.org" xmlns:ns3="http://meta.openl.org" xmlns:ns2="http://domain.openl.org" xmlns:ns1="http://DefaultNamespace" xmlns:ns0="http://base.openl.org">
      <xsd:import namespace="http://DefaultNamespace"/>
      <xsd:import namespace="http://domain.openl.org"/>
      <xsd:import namespace="http://binding.openl.org"/>
      <xsd:import namespace="http://syntax.openl.org"/>
      <xsd:import namespace="http://meta.openl.org"/>
      <xsd:import namespace="http://base.openl.org"/>
      <xsd:complexType name="IOpenField">
        <xsd:complexContent>
          <xsd:extension base="tns:IOpenMember">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="const" type="xsd:boolean"/>
              <xsd:element minOccurs="0" name="readable" type="xsd:boolean"/>
              <xsd:element minOccurs="0" name="writable" type="xsd:boolean"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfIOpenMethod">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="IOpenMethod" nillable="true" type="tns:IOpenMethod"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="IOpenMember">
        <xsd:complexContent>
          <xsd:extension base="ns0:INamedThing">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="declaringClass" nillable="true" type="tns:IOpenClass"/>
              <xsd:element minOccurs="0" name="info" nillable="true" type="tns:IMemberMetaInfo"/>
              <xsd:element minOccurs="0" name="static" type="xsd:boolean"/>
              <xsd:element minOccurs="0" name="type" nillable="true" type="tns:IOpenClass"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="IMethodSignature">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="numberOfParameters" type="xsd:int"/>
          <xsd:element minOccurs="0" name="parameterTypes" nillable="true" type="tns:ArrayOfIOpenClass"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="IOpenMethodHeader">
        <xsd:complexContent>
          <xsd:extension base="tns:IOpenMember">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="signature" nillable="true" type="tns:IMethodSignature"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="IOpenClass">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="abstract" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="aggregateInfo" nillable="true" type="tns:IAggregateInfo"/>
          <xsd:element minOccurs="0" name="array" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="componentClass" nillable="true" type="tns:IOpenClass"/>
          <xsd:element minOccurs="0" name="declaredFields" nillable="true" type="ns1:string2IOpenFieldMap"/>
          <xsd:element minOccurs="0" name="declaredMethods" nillable="true" type="tns:ArrayOfIOpenMethod"/>
          <xsd:element minOccurs="0" name="domain" nillable="true" type="ns2:IDomain"/>
          <xsd:element minOccurs="0" name="fields" nillable="true" type="ns1:string2IOpenFieldMap"/>
          <xsd:element minOccurs="0" name="indexField" nillable="true" type="tns:IOpenField"/>
          <xsd:element minOccurs="0" name="methods" nillable="true" type="tns:ArrayOfIOpenMethod"/>
          <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="nameSpace" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="openClass" nillable="true" type="tns:IOpenClass"/>
          <xsd:element minOccurs="0" name="simple" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="types" nillable="true" type="ns1:string2IOpenClassMap"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="IOpenMethod">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="declaringClass" nillable="true" type="tns:IOpenClass"/>
          <xsd:element minOccurs="0" name="info" nillable="true" type="tns:IMemberMetaInfo"/>
          <xsd:element minOccurs="0" name="method" nillable="true" type="tns:IOpenMethod"/>
          <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="signature" nillable="true" type="tns:IMethodSignature"/>
          <xsd:element minOccurs="0" name="static" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="type" nillable="true" type="tns:IOpenClass"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfIOpenClass">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="IOpenClass" nillable="true" type="tns:IOpenClass"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="IMemberMetaInfo">
        <xsd:complexContent>
          <xsd:extension base="ns3:IMetaInfo">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="dependencies" nillable="true" type="ns4:BindingDependencies"/>
              <xsd:element minOccurs="0" name="properties" nillable="true" type="ns1:string2anyTypeMap"/>
              <xsd:element minOccurs="0" name="syntaxNode" nillable="true" type="ns5:ISyntaxNode"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfIOpenField">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="IOpenField" nillable="true" type="tns:IOpenField"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="IAggregateInfo">
        <xsd:sequence/>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://impl.types.openl.org" xmlns:tns="http://impl.types.openl.org" xmlns:ns1="http://DefaultNamespace" xmlns:ns0="http://types.openl.org">
      <xsd:import namespace="http://types.openl.org"/>
      <xsd:import namespace="http://DefaultNamespace"/>
      <xsd:complexType abstract="true" name="AMethod">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="declaringClass" nillable="true" type="ns0:IOpenClass"/>
          <xsd:element minOccurs="0" name="header" nillable="true" type="ns0:IOpenMethodHeader"/>
          <xsd:element minOccurs="0" name="info" nillable="true" type="ns0:IMemberMetaInfo"/>
          <xsd:element minOccurs="0" name="method" nillable="true" type="ns0:IOpenMethod"/>
          <xsd:element minOccurs="0" name="moduleName" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="signature" nillable="true" type="ns0:IMethodSignature"/>
          <xsd:element minOccurs="0" name="static" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="type" nillable="true" type="ns0:IOpenClass"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType abstract="true" name="ExecutableMethod">
        <xsd:complexContent>
          <xsd:extension base="tns:AMethod">
            <xsd:sequence/>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="DynamicObject">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="fieldValues" nillable="true" type="ns1:string2anyTypeMap"/>
          <xsd:element minOccurs="0" name="type" nillable="true" type="ns0:IOpenClass"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfExecutableMethod">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="ExecutableMethod" nillable="true" type="tns:ExecutableMethod"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://binding.openl.org" xmlns:tns="http://binding.openl.org" xmlns:ns3="http://impl.types.openl.org" xmlns:ns2="http://DefaultNamespace" xmlns:ns1="http://types.openl.org" xmlns:ns0="http://syntax.openl.org">
      <xsd:import namespace="http://syntax.openl.org"/>
      <xsd:import namespace="http://types.openl.org"/>
      <xsd:import namespace="http://DefaultNamespace"/>
      <xsd:import namespace="http://impl.types.openl.org"/>
      <xsd:complexType name="ArrayOfIBoundNode">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="IBoundNode" nillable="true" type="tns:IBoundNode"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="IBoundNode">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="children" nillable="true" type="tns:ArrayOfIBoundNode"/>
          <xsd:element minOccurs="0" name="literalExpression" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="lvalue" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="staticTarget" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="syntaxNode" nillable="true" type="ns0:ISyntaxNode"/>
          <xsd:element minOccurs="0" name="targetNode" nillable="true" type="tns:IBoundNode"/>
          <xsd:element minOccurs="0" name="type" nillable="true" type="ns1:IOpenClass"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="BindingDependencies">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="assigned" nillable="true" type="ns1:ArrayOfIOpenField"/>
          <xsd:element minOccurs="0" name="assignedMap" nillable="true" type="ns2:IOpenField2IBoundNodeMap"/>
          <xsd:element minOccurs="0" name="fieldNodes" nillable="true" type="tns:ArrayOfIBoundNode"/>
          <xsd:element minOccurs="0" name="fieldsMap" nillable="true" type="ns2:IBoundNode2IOpenFieldMap"/>
          <xsd:element minOccurs="0" name="methods" nillable="true" type="ns1:ArrayOfIOpenMethod"/>
          <xsd:element minOccurs="0" name="rulesMethods" nillable="true" type="ns3:ArrayOfExecutableMethod"/>
          <xsd:element minOccurs="0" name="types" nillable="true" type="ns1:ArrayOfIOpenClass"/>
          <xsd:element minOccurs="0" name="typesMap" nillable="true" type="ns2:IOpenClass2IBoundNodeMap"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://domain.openl.org" xmlns:tns="http://domain.openl.org" xmlns:ns1="http://base.openl.org" xmlns:ns0="http://lang.java">
      <xsd:import namespace="http://lang.java"/>
      <xsd:import namespace="http://base.openl.org"/>
      <xsd:complexType name="IDomain">
        <xsd:complexContent>
          <xsd:extension base="ns0:Iterable">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="elementType" nillable="true" type="tns:IType"/>
              <xsd:element minOccurs="0" name="finite" type="xsd:boolean"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="IType">
        <xsd:complexContent>
          <xsd:extension base="ns1:INameSpacedThing">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="domain" nillable="true" type="tns:IDomain"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://io.java" xmlns:tns="http://io.java">
      <xsd:complexType abstract="true" name="InputStream">
        <xsd:sequence/>
      </xsd:complexType>
      <xsd:complexType abstract="true" name="Reader">
        <xsd:sequence/>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.openl.org" xmlns:tns="http://base.openl.org">
      <xsd:complexType name="INameSpacedThing">
        <xsd:complexContent>
          <xsd:extension base="tns:INamedThing">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="nameSpace" nillable="true" type="xsd:string"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="INamedThing">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://context.rules.openl.org" xmlns:tns="http://context.rules.openl.org" xmlns:ns1="http://enumeration.rules.openl.org" xmlns:ns0="http://runtime.openl.org">
      <xsd:import namespace="http://enumeration.rules.openl.org"/>
      <xsd:import namespace="http://runtime.openl.org"/>
      <xsd:complexType name="IRulesRuntimeContext">
        <xsd:complexContent>
          <xsd:extension base="ns0:IRuntimeContext">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="caProvince" nillable="true" type="ns1:CaProvincesEnum"/>
              <xsd:element minOccurs="0" name="caRegion" nillable="true" type="ns1:CaRegionsEnum"/>
              <xsd:element minOccurs="0" name="country" nillable="true" type="ns1:CountriesEnum"/>
              <xsd:element minOccurs="0" name="currency" nillable="true" type="ns1:CurrenciesEnum"/>
              <xsd:element minOccurs="0" name="currentDate" type="xsd:dateTime"/>
              <xsd:element minOccurs="0" name="lang" nillable="true" type="ns1:LanguagesEnum"/>
              <xsd:element minOccurs="0" name="lob" nillable="true" type="xsd:string"/>
              <xsd:element minOccurs="0" name="region" nillable="true" type="ns1:RegionsEnum"/>
              <xsd:element minOccurs="0" name="requestDate" type="xsd:dateTime"/>
              <xsd:element minOccurs="0" name="usRegion" nillable="true" type="ns1:UsRegionsEnum"/>
              <xsd:element minOccurs="0" name="usState" nillable="true" type="ns1:UsStatesEnum"/>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="MontoMaximo">
    <wsdl:part element="tns:MontoMaximo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="ValidacionTarjeta">
    <wsdl:part element="tns:ValidacionTarjeta" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="MontoMaximoResponse">
    <wsdl:part element="tns:MontoMaximoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getPresupuestoGerencia">
    <wsdl:part element="tns:getPresupuestoGerencia" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getPresupuestoGerenciaResponse">
    <wsdl:part element="tns:getPresupuestoGerenciaResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="ValidacionTarjetaResponse">
    <wsdl:part element="tns:ValidacionTarjetaResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:portType name="DEFAULT_ReglasKallSonysPortType">
    <wsdl:operation name="MontoMaximo">
      <wsdl:input message="tns:MontoMaximo" name="MontoMaximo"/>
      <wsdl:output message="tns:MontoMaximoResponse" name="MontoMaximoResponse"/>
    </wsdl:operation>
    <wsdl:operation name="ValidacionTarjeta">
      <wsdl:input message="tns:ValidacionTarjeta" name="ValidacionTarjeta"/>
      <wsdl:output message="tns:ValidacionTarjetaResponse" name="ValidacionTarjetaResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getPresupuestoGerencia">
      <wsdl:input message="tns:getPresupuestoGerencia" name="getPresupuestoGerencia"/>
      <wsdl:output message="tns:getPresupuestoGerenciaResponse" name="getPresupuestoGerenciaResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="DEFAULT_ReglasKallSonysSoapBinding" type="tns:DEFAULT_ReglasKallSonysPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="MontoMaximo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="MontoMaximo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="MontoMaximoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ValidacionTarjeta">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="ValidacionTarjeta">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ValidacionTarjetaResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPresupuestoGerencia">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPresupuestoGerencia">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPresupuestoGerenciaResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="DEFAULT_ReglasKallSonys">
    <wsdl:port binding="tns:DEFAULT_ReglasKallSonysSoapBinding" name="DEFAULT_ReglasKallSonysPortType">
      <soap:address location="http://localhost:8080/openlTabletsWs/DEFAULT/ReglasKallSonys"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://ASW1817:8088/mockDEFAULT_ReglasKallSonysSoapBinding</con:endpoint><con:endpoint>http://localhost:8080/openlTabletsWs/DEFAULT/ReglasKallSonys</con:endpoint></con:endpoints><con:operation id="29adab59-ad11-41e8-a3bd-381c92f1409f" isOneWay="false" action="" name="getPresupuestoGerencia" bindingOperationName="getPresupuestoGerencia" type="Request-Response" outputName="getPresupuestoGerenciaResponse" inputName="getPresupuestoGerencia" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5c7bd836-ecc6-4cf5-9ad5-77b8405cb38c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openlTabletsWs/DEFAULT/ReglasKallSonys</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:def="http://DefaultNamespace" xmlns:con="http://context.rules.openl.org">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <def:getPresupuestoGerencia>\r
         <!--Optional:-->\r
         <def:arg0>\r
            <!--Optional:-->\r
            <!--type: CaProvincesEnum - enumeration: [AB,BC,PE,MB,NB,NS,NU,ON,QC,SK,NL,YT,NT]-->\r
            <con:caProvince>?</con:caProvince>\r
            <!--Optional:-->\r
            <!--type: CaRegionsEnum - enumeration: [QC,HQ]-->\r
            <con:caRegion>?</con:caRegion>\r
            <!--Optional:-->\r
            <!--type: CountriesEnum - enumeration: [AL,DZ,AR,AU,AT,BH,BY,BE,BO,BA,BR,BG,CA,CL,CN,CO,CR,HR,CY,CZ,DK,DO,EC,EG,SV,EE,FI,FR,DE,GR,GT,HN,HK,HU,IS,IN,ID,IQ,IE,IL,IT,JP,JO,KW,LV,LB,LT,LU,MK,MY,MT,MX,MA,NL,NZ,NI,NO,OM,PA,PY,PE,PH,PL,PT,PR,QA,RO,RU,SA,CS,SG,SK,SI,ZA,ES,SD,SE,CH,SY,TW,TH,TN,TR,UA,AE,GB,US,UY,VE,VN,YE]-->\r
            <con:country>?</con:country>\r
            <!--Optional:-->\r
            <!--type: CurrenciesEnum - enumeration: [ALL,DZD,ARS,AUD,BHD,BYR,BOB,BAM,BRL,CAD,CLP,CNY,COP,CRC,HRK,CZK,DKK,DOP,EGP,EUR,GTQ,HNL,HKD,HUF,ISK,INR,IDR,IQD,ILS,JPY,JOD,KWD,LVL,LBP,LTL,MKD,MYR,MXN,MAD,NZD,NIO,NOK,OMR,PAB,PYG,PEN,PHP,PLN,QAR,RON,RUB,SAR,RSD,SGD,ZAR,SDG,SEK,CHF,SYP,TWD,TND,TRY,UAH,AED,GBP,USD,UYU,VEF,VND,YER]-->\r
            <con:currency>?</con:currency>\r
            <!--Optional:-->\r
            <!--type: dateTime-->\r
            <con:currentDate>?</con:currentDate>\r
            <!--Optional:-->\r
            <!--type: LanguagesEnum - enumeration: [ALB,ARA,BEL,BUL,CAT,CHI,SCR,CZE,DAN,DUT,ENG,FIN,FRE,GER,GRE,HEB,HIN,HUN,IND,GLE,ITA,JPN,LAV,LIT,MAC,MAY,MLT,NOR,POL,POR,RUM,RUS,SCC,SLO,SPA,THA,TUR,UKR,VIE]-->\r
            <con:lang>?</con:lang>\r
            <!--Optional:-->\r
            <!--type: string-->\r
            <con:lob>?</con:lob>\r
            <!--Optional:-->\r
            <!--type: RegionsEnum - enumeration: [NCSA,EU,EMEA,APJ]-->\r
            <con:region>?</con:region>\r
            <!--Optional:-->\r
            <!--type: dateTime-->\r
            <con:requestDate>?</con:requestDate>\r
            <!--Optional:-->\r
            <!--type: UsRegionsEnum - enumeration: [MW,NE,SE,SW,W]-->\r
            <con:usRegion>?</con:usRegion>\r
            <!--Optional:-->\r
            <!--type: UsStatesEnum - enumeration: [AL,AK,AZ,AR,CA,CO,CT,DC,DE,FL,GA,HI,ID,IL,IN,IA,KS,KY,LA,ME,MD,MA,MI,MN,MS,MO,MT,NE,NV,NH,NJ,NM,NY,NC,ND,OH,OK,OR,PA,PR,RI,SC,SD,TN,TX,UT,VT,VA,WA,WV,WI,WY]-->\r
            <con:usState>?</con:usState>\r
         </def:arg0>\r
      </def:getPresupuestoGerencia>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://DefaultNamespace/DEFAULT_ReglasKallSonysPortType/getPresupuestoGerencia"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="6dbf9d4e-77db-4cc7-b636-fe7146acf404" isOneWay="false" action="" name="MontoMaximo" bindingOperationName="MontoMaximo" type="Request-Response" outputName="MontoMaximoResponse" inputName="MontoMaximo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3dc65036-abfe-4c92-9567-cffb9ea6b8fe" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openlTabletsWs/DEFAULT/ReglasKallSonys</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:def="http://DefaultNamespace" xmlns:con="http://context.rules.openl.org">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <def:MontoMaximo>\r
         <!--Optional:-->\r
         <def:runtimeContext>\r
            <!--Optional:-->\r
            <!--type: CaProvincesEnum - enumeration: [AB,BC,PE,MB,NB,NS,NU,ON,QC,SK,NL,YT,NT]-->\r
            <con:caProvince>?</con:caProvince>\r
            <!--Optional:-->\r
            <!--type: CaRegionsEnum - enumeration: [QC,HQ]-->\r
            <con:caRegion>?</con:caRegion>\r
            <!--Optional:-->\r
            <!--type: CountriesEnum - enumeration: [AL,DZ,AR,AU,AT,BH,BY,BE,BO,BA,BR,BG,CA,CL,CN,CO,CR,HR,CY,CZ,DK,DO,EC,EG,SV,EE,FI,FR,DE,GR,GT,HN,HK,HU,IS,IN,ID,IQ,IE,IL,IT,JP,JO,KW,LV,LB,LT,LU,MK,MY,MT,MX,MA,NL,NZ,NI,NO,OM,PA,PY,PE,PH,PL,PT,PR,QA,RO,RU,SA,CS,SG,SK,SI,ZA,ES,SD,SE,CH,SY,TW,TH,TN,TR,UA,AE,GB,US,UY,VE,VN,YE]-->\r
            <con:country>?</con:country>\r
            <!--Optional:-->\r
            <!--type: CurrenciesEnum - enumeration: [ALL,DZD,ARS,AUD,BHD,BYR,BOB,BAM,BRL,CAD,CLP,CNY,COP,CRC,HRK,CZK,DKK,DOP,EGP,EUR,GTQ,HNL,HKD,HUF,ISK,INR,IDR,IQD,ILS,JPY,JOD,KWD,LVL,LBP,LTL,MKD,MYR,MXN,MAD,NZD,NIO,NOK,OMR,PAB,PYG,PEN,PHP,PLN,QAR,RON,RUB,SAR,RSD,SGD,ZAR,SDG,SEK,CHF,SYP,TWD,TND,TRY,UAH,AED,GBP,USD,UYU,VEF,VND,YER]-->\r
            <con:currency>?</con:currency>\r
            <!--Optional:-->\r
            <!--type: dateTime-->\r
            <con:currentDate>?</con:currentDate>\r
            <!--Optional:-->\r
            <!--type: LanguagesEnum - enumeration: [ALB,ARA,BEL,BUL,CAT,CHI,SCR,CZE,DAN,DUT,ENG,FIN,FRE,GER,GRE,HEB,HIN,HUN,IND,GLE,ITA,JPN,LAV,LIT,MAC,MAY,MLT,NOR,POL,POR,RUM,RUS,SCC,SLO,SPA,THA,TUR,UKR,VIE]-->\r
            <con:lang>?</con:lang>\r
            <!--Optional:-->\r
            <!--type: string-->\r
            <con:lob>?</con:lob>\r
            <!--Optional:-->\r
            <!--type: RegionsEnum - enumeration: [NCSA,EU,EMEA,APJ]-->\r
            <con:region>?</con:region>\r
            <!--Optional:-->\r
            <!--type: dateTime-->\r
            <con:requestDate>?</con:requestDate>\r
            <!--Optional:-->\r
            <!--type: UsRegionsEnum - enumeration: [MW,NE,SE,SW,W]-->\r
            <con:usRegion>?</con:usRegion>\r
            <!--Optional:-->\r
            <!--type: UsStatesEnum - enumeration: [AL,AK,AZ,AR,CA,CO,CT,DC,DE,FL,GA,HI,ID,IL,IN,IA,KS,KY,LA,ME,MD,MA,MI,MN,MS,MO,MT,NE,NV,NH,NJ,NM,NY,NC,ND,OH,OK,OR,PA,PR,RI,SC,SD,TN,TX,UT,VT,VA,WA,WV,WI,WY]-->\r
            <con:usState>?</con:usState>\r
         </def:runtimeContext>\r
         <!--Optional:-->\r
         <!--type: string-->\r
         <def:monto>?</def:monto>\r
      </def:MontoMaximo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://DefaultNamespace/DEFAULT_ReglasKallSonysPortType/MontoMaximo"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="a4cb8981-4133-41d0-aad2-72095eace6a7" isOneWay="false" action="" name="ValidacionTarjeta" bindingOperationName="ValidacionTarjeta" type="Request-Response" outputName="ValidacionTarjetaResponse" inputName="ValidacionTarjeta" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="aa0fc360-cc81-494c-8c50-be68ca5661b2" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openlTabletsWs/DEFAULT/ReglasKallSonys</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:def="http://DefaultNamespace" xmlns:con="http://context.rules.openl.org">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <def:ValidacionTarjeta>\r
         <!--Optional:-->\r
         <def:runtimeContext>\r
            <!--Optional:-->\r
            <!--type: CaProvincesEnum - enumeration: [AB,BC,PE,MB,NB,NS,NU,ON,QC,SK,NL,YT,NT]-->\r
            <con:caProvince>?</con:caProvince>\r
            <!--Optional:-->\r
            <!--type: CaRegionsEnum - enumeration: [QC,HQ]-->\r
            <con:caRegion>?</con:caRegion>\r
            <!--Optional:-->\r
            <!--type: CountriesEnum - enumeration: [AL,DZ,AR,AU,AT,BH,BY,BE,BO,BA,BR,BG,CA,CL,CN,CO,CR,HR,CY,CZ,DK,DO,EC,EG,SV,EE,FI,FR,DE,GR,GT,HN,HK,HU,IS,IN,ID,IQ,IE,IL,IT,JP,JO,KW,LV,LB,LT,LU,MK,MY,MT,MX,MA,NL,NZ,NI,NO,OM,PA,PY,PE,PH,PL,PT,PR,QA,RO,RU,SA,CS,SG,SK,SI,ZA,ES,SD,SE,CH,SY,TW,TH,TN,TR,UA,AE,GB,US,UY,VE,VN,YE]-->\r
            <con:country>?</con:country>\r
            <!--Optional:-->\r
            <!--type: CurrenciesEnum - enumeration: [ALL,DZD,ARS,AUD,BHD,BYR,BOB,BAM,BRL,CAD,CLP,CNY,COP,CRC,HRK,CZK,DKK,DOP,EGP,EUR,GTQ,HNL,HKD,HUF,ISK,INR,IDR,IQD,ILS,JPY,JOD,KWD,LVL,LBP,LTL,MKD,MYR,MXN,MAD,NZD,NIO,NOK,OMR,PAB,PYG,PEN,PHP,PLN,QAR,RON,RUB,SAR,RSD,SGD,ZAR,SDG,SEK,CHF,SYP,TWD,TND,TRY,UAH,AED,GBP,USD,UYU,VEF,VND,YER]-->\r
            <con:currency>?</con:currency>\r
            <!--Optional:-->\r
            <!--type: dateTime-->\r
            <con:currentDate>?</con:currentDate>\r
            <!--Optional:-->\r
            <!--type: LanguagesEnum - enumeration: [ALB,ARA,BEL,BUL,CAT,CHI,SCR,CZE,DAN,DUT,ENG,FIN,FRE,GER,GRE,HEB,HIN,HUN,IND,GLE,ITA,JPN,LAV,LIT,MAC,MAY,MLT,NOR,POL,POR,RUM,RUS,SCC,SLO,SPA,THA,TUR,UKR,VIE]-->\r
            <con:lang>?</con:lang>\r
            <!--Optional:-->\r
            <!--type: string-->\r
            <con:lob>?</con:lob>\r
            <!--Optional:-->\r
            <!--type: RegionsEnum - enumeration: [NCSA,EU,EMEA,APJ]-->\r
            <con:region>?</con:region>\r
            <!--Optional:-->\r
            <!--type: dateTime-->\r
            <con:requestDate>?</con:requestDate>\r
            <!--Optional:-->\r
            <!--type: UsRegionsEnum - enumeration: [MW,NE,SE,SW,W]-->\r
            <con:usRegion>?</con:usRegion>\r
            <!--Optional:-->\r
            <!--type: UsStatesEnum - enumeration: [AL,AK,AZ,AR,CA,CO,CT,DC,DE,FL,GA,HI,ID,IL,IN,IA,KS,KY,LA,ME,MD,MA,MI,MN,MS,MO,MT,NE,NV,NH,NJ,NM,NY,NC,ND,OH,OK,OR,PA,PR,RI,SC,SD,TN,TX,UT,VT,VA,WA,WV,WI,WY]-->\r
            <con:usState>?</con:usState>\r
         </def:runtimeContext>\r
         <!--Optional:-->\r
         <!--type: double-->\r
         <def:monto>?</def:monto>\r
         <!--Optional:-->\r
         <!--type: string-->\r
         <def:tipoTarjeta>?</def:tipoTarjeta>\r
      </def:ValidacionTarjeta>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://DefaultNamespace/DEFAULT_ReglasKallSonysPortType/ValidacionTarjeta"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:mockService id="4d17f603-84fe-4637-855c-d3053f31a022" port="8088" path="/mockDEFAULT_ReglasKallSonysSoapBinding" host="ASW1817" name="DEFAULT_ReglasKallSonysSoapBinding MockService"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:properties/><con:mockOperation name="getPresupuestoGerencia" id="18e9cbab-711f-4bb8-9f17-8a56a2201d76" interface="DEFAULT_ReglasKallSonysSoapBinding" operation="getPresupuestoGerencia"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="92e4f7b3-1274-4ec7-8b67-5d3baf8cad31" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:def="http://DefaultNamespace" xmlns:impl="http://impl.types.openl.org" xmlns:typ="http://types.openl.org" xmlns:base="http://base.openl.org" xmlns:meta="http://meta.openl.org" xmlns:bin="http://binding.openl.org" xmlns:syn="http://syntax.openl.org" xmlns:sour="http://source.openl.org" xmlns:text="http://text.util.openl.org" xmlns:dom="http://domain.openl.org" xmlns:prop="http://properties.table.rules.openl.org" xmlns:enum="http://enumeration.rules.openl.org">
   <soapenv:Header/>
   <soapenv:Body>
      <def:getPresupuestoGerenciaResponse>
         <!--Optional:-->
         <def:return>
            <!--Optional:-->
            <impl:fieldValues>
               <!--Zero or more repetitions:-->
               <def:entry>
                  <!--type: string-->
                  <def:key>?</def:key>
                  <!--Optional:-->
                  <def:value>?</def:value>
               </def:entry>
            </impl:fieldValues>
            <!--Optional:-->
            <impl:type>
               <!--Optional:-->
               <!--type: boolean-->
               <typ:abstract>?</typ:abstract>
               <!--Optional:-->
               <typ:aggregateInfo/>
               <!--Optional:-->
               <!--type: boolean-->
               <typ:array>?</typ:array>
               <!--Optional:-->
               <typ:componentClass/>
               <!--Optional:-->
               <typ:declaredFields>
                  <!--Zero or more repetitions:-->
                  <def:entry>
                     <!--type: string-->
                     <def:key>?</def:key>
                     <!--Optional:-->
                     <def:value>
                        <!--Optional:-->
                        <!--type: string-->
                        <base:name>?</base:name>
                        <!--Optional:-->
                        <typ:declaringClass/>
                        <!--Optional:-->
                        <typ:info>
                           <!--Optional:-->
                           <!--type: string-->
                           <meta:sourceUrl>?</meta:sourceUrl>
                           <!--Optional:-->
                           <typ:dependencies>
                              <!--Optional:-->
                              <bin:assigned>
                                 <!--Zero or more repetitions:-->
                                 <typ:IOpenField/>
                              </bin:assigned>
                              <!--Optional:-->
                              <bin:assignedMap>
                                 <!--Zero or more repetitions:-->
                                 <def:entry>
                                    <def:key/>
                                    <!--Optional:-->
                                    <def:value>
                                       <!--Optional:-->
                                       <bin:children>
                                          <!--Zero or more repetitions:-->
                                          <bin:IBoundNode/>
                                       </bin:children>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <bin:literalExpression>?</bin:literalExpression>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <bin:lvalue>?</bin:lvalue>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <bin:staticTarget>?</bin:staticTarget>
                                       <!--Optional:-->
                                       <bin:syntaxNode>
                                          <!--Optional:-->
                                          <syn:module>
                                             <!--Optional:-->
                                             <sour:byteStream/>
                                             <!--Optional:-->
                                             <sour:characterStream/>
                                             <!--Optional:-->
                                             <!--type: string-->
                                             <sour:code>?</sour:code>
                                             <!--Optional:-->
                                             <!--type: boolean-->
                                             <sour:modified>?</sour:modified>
                                             <!--Optional:-->
                                             <sour:params>
                                                <!--Zero or more repetitions:-->
                                                <def:entry>
                                                   <!--type: string-->
                                                   <def:key>?</def:key>
                                                   <!--Optional:-->
                                                   <def:value>?</def:value>
                                                </def:entry>
                                             </sour:params>
                                             <!--Optional:-->
                                             <!--type: int-->
                                             <sour:startPosition>?</sour:startPosition>
                                             <!--Optional:-->
                                             <!--type: string-->
                                             <sour:uri>?</sour:uri>
                                          </syn:module>
                                          <!--Optional:-->
                                          <!--type: int-->
                                          <syn:numberOfChildren>?</syn:numberOfChildren>
                                          <!--Optional:-->
                                          <syn:parent/>
                                          <!--Optional:-->
                                          <syn:sourceLocation>
                                             <!--Optional:-->
                                             <text:end/>
                                             <!--Optional:-->
                                             <text:start/>
                                             <!--Optional:-->
                                             <!--type: boolean-->
                                             <text:textLocation>?</text:textLocation>
                                          </syn:sourceLocation>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <syn:type>?</syn:type>
                                       </bin:syntaxNode>
                                       <!--Optional:-->
                                       <bin:targetNode/>
                                       <!--Optional:-->
                                       <bin:type/>
                                    </def:value>
                                 </def:entry>
                              </bin:assignedMap>
                              <!--Optional:-->
                              <bin:fieldNodes>
                                 <!--Zero or more repetitions:-->
                                 <bin:IBoundNode>
                                    <!--Optional:-->
                                    <bin:children/>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:literalExpression>?</bin:literalExpression>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:lvalue>?</bin:lvalue>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:staticTarget>?</bin:staticTarget>
                                    <!--Optional:-->
                                    <bin:syntaxNode>
                                       <!--Optional:-->
                                       <syn:module>
                                          <!--Optional:-->
                                          <sour:byteStream/>
                                          <!--Optional:-->
                                          <sour:characterStream/>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <sour:code>?</sour:code>
                                          <!--Optional:-->
                                          <!--type: boolean-->
                                          <sour:modified>?</sour:modified>
                                          <!--Optional:-->
                                          <sour:params>
                                             <!--Zero or more repetitions:-->
                                             <def:entry>
                                                <!--type: string-->
                                                <def:key>?</def:key>
                                                <!--Optional:-->
                                                <def:value>?</def:value>
                                             </def:entry>
                                          </sour:params>
                                          <!--Optional:-->
                                          <!--type: int-->
                                          <sour:startPosition>?</sour:startPosition>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <sour:uri>?</sour:uri>
                                       </syn:module>
                                       <!--Optional:-->
                                       <!--type: int-->
                                       <syn:numberOfChildren>?</syn:numberOfChildren>
                                       <!--Optional:-->
                                       <syn:parent/>
                                       <!--Optional:-->
                                       <syn:sourceLocation>
                                          <!--Optional:-->
                                          <text:end/>
                                          <!--Optional:-->
                                          <text:start/>
                                          <!--Optional:-->
                                          <!--type: boolean-->
                                          <text:textLocation>?</text:textLocation>
                                       </syn:sourceLocation>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <syn:type>?</syn:type>
                                    </bin:syntaxNode>
                                    <!--Optional:-->
                                    <bin:targetNode/>
                                    <!--Optional:-->
                                    <bin:type/>
                                 </bin:IBoundNode>
                              </bin:fieldNodes>
                              <!--Optional:-->
                              <bin:fieldsMap>
                                 <!--Zero or more repetitions:-->
                                 <def:entry>
                                    <def:key>
                                       <!--Optional:-->
                                       <bin:children>
                                          <!--Zero or more repetitions:-->
                                          <bin:IBoundNode/>
                                       </bin:children>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <bin:literalExpression>?</bin:literalExpression>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <bin:lvalue>?</bin:lvalue>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <bin:staticTarget>?</bin:staticTarget>
                                       <!--Optional:-->
                                       <bin:syntaxNode>
                                          <!--Optional:-->
                                          <syn:module>
                                             <!--Optional:-->
                                             <sour:byteStream/>
                                             <!--Optional:-->
                                             <sour:characterStream/>
                                             <!--Optional:-->
                                             <!--type: string-->
                                             <sour:code>?</sour:code>
                                             <!--Optional:-->
                                             <!--type: boolean-->
                                             <sour:modified>?</sour:modified>
                                             <!--Optional:-->
                                             <sour:params>
                                                <!--Zero or more repetitions:-->
                                                <def:entry>
                                                   <!--type: string-->
                                                   <def:key>?</def:key>
                                                   <!--Optional:-->
                                                   <def:value>?</def:value>
                                                </def:entry>
                                             </sour:params>
                                             <!--Optional:-->
                                             <!--type: int-->
                                             <sour:startPosition>?</sour:startPosition>
                                             <!--Optional:-->
                                             <!--type: string-->
                                             <sour:uri>?</sour:uri>
                                          </syn:module>
                                          <!--Optional:-->
                                          <!--type: int-->
                                          <syn:numberOfChildren>?</syn:numberOfChildren>
                                          <!--Optional:-->
                                          <syn:parent/>
                                          <!--Optional:-->
                                          <syn:sourceLocation>
                                             <!--Optional:-->
                                             <text:end/>
                                             <!--Optional:-->
                                             <text:start/>
                                             <!--Optional:-->
                                             <!--type: boolean-->
                                             <text:textLocation>?</text:textLocation>
                                          </syn:sourceLocation>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <syn:type>?</syn:type>
                                       </bin:syntaxNode>
                                       <!--Optional:-->
                                       <bin:targetNode/>
                                       <!--Optional:-->
                                       <bin:type/>
                                    </def:key>
                                    <!--Optional:-->
                                    <def:value/>
                                 </def:entry>
                              </bin:fieldsMap>
                              <!--Optional:-->
                              <bin:methods>
                                 <!--Zero or more repetitions:-->
                                 <typ:IOpenMethod>
                                    <!--Optional:-->
                                    <typ:declaringClass/>
                                    <!--Optional:-->
                                    <typ:info/>
                                    <!--Optional:-->
                                    <typ:method/>
                                    <!--Optional:-->
                                    <!--type: string-->
                                    <typ:name>?</typ:name>
                                    <!--Optional:-->
                                    <typ:signature>
                                       <!--Optional:-->
                                       <!--type: int-->
                                       <typ:numberOfParameters>?</typ:numberOfParameters>
                                       <!--Optional:-->
                                       <typ:parameterTypes>
                                          <!--Zero or more repetitions:-->
                                          <typ:IOpenClass/>
                                       </typ:parameterTypes>
                                    </typ:signature>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:static>?</typ:static>
                                    <!--Optional:-->
                                    <typ:type/>
                                 </typ:IOpenMethod>
                              </bin:methods>
                              <!--Optional:-->
                              <bin:rulesMethods>
                                 <!--Zero or more repetitions:-->
                                 <impl:ExecutableMethod>
                                    <!--Optional:-->
                                    <impl:declaringClass/>
                                    <!--Optional:-->
                                    <impl:header>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <base:name>?</base:name>
                                       <!--Optional:-->
                                       <typ:declaringClass/>
                                       <!--Optional:-->
                                       <typ:info/>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <typ:static>?</typ:static>
                                       <!--Optional:-->
                                       <typ:type/>
                                       <!--Optional:-->
                                       <typ:signature>
                                          <!--Optional:-->
                                          <!--type: int-->
                                          <typ:numberOfParameters>?</typ:numberOfParameters>
                                          <!--Optional:-->
                                          <typ:parameterTypes>
                                             <!--Zero or more repetitions:-->
                                             <typ:IOpenClass/>
                                          </typ:parameterTypes>
                                       </typ:signature>
                                    </impl:header>
                                    <!--Optional:-->
                                    <impl:info/>
                                    <!--Optional:-->
                                    <impl:method>
                                       <!--Optional:-->
                                       <typ:declaringClass/>
                                       <!--Optional:-->
                                       <typ:info/>
                                       <!--Optional:-->
                                       <typ:method/>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <typ:name>?</typ:name>
                                       <!--Optional:-->
                                       <typ:signature>
                                          <!--Optional:-->
                                          <!--type: int-->
                                          <typ:numberOfParameters>?</typ:numberOfParameters>
                                          <!--Optional:-->
                                          <typ:parameterTypes>
                                             <!--Zero or more repetitions:-->
                                             <typ:IOpenClass/>
                                          </typ:parameterTypes>
                                       </typ:signature>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <typ:static>?</typ:static>
                                       <!--Optional:-->
                                       <typ:type/>
                                    </impl:method>
                                    <!--Optional:-->
                                    <!--type: string-->
                                    <impl:moduleName>?</impl:moduleName>
                                    <!--Optional:-->
                                    <!--type: string-->
                                    <impl:name>?</impl:name>
                                    <!--Optional:-->
                                    <impl:signature>
                                       <!--Optional:-->
                                       <!--type: int-->
                                       <typ:numberOfParameters>?</typ:numberOfParameters>
                                       <!--Optional:-->
                                       <typ:parameterTypes>
                                          <!--Zero or more repetitions:-->
                                          <typ:IOpenClass/>
                                       </typ:parameterTypes>
                                    </impl:signature>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <impl:static>?</impl:static>
                                    <!--Optional:-->
                                    <impl:type/>
                                 </impl:ExecutableMethod>
                              </bin:rulesMethods>
                              <!--Optional:-->
                              <bin:types>
                                 <!--Zero or more repetitions:-->
                                 <typ:IOpenClass/>
                              </bin:types>
                              <!--Optional:-->
                              <bin:typesMap>
                                 <!--Zero or more repetitions:-->
                                 <def:entry>
                                    <def:key/>
                                    <!--Optional:-->
                                    <def:value>
                                       <!--Optional:-->
                                       <bin:children>
                                          <!--Zero or more repetitions:-->
                                          <bin:IBoundNode/>
                                       </bin:children>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <bin:literalExpression>?</bin:literalExpression>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <bin:lvalue>?</bin:lvalue>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <bin:staticTarget>?</bin:staticTarget>
                                       <!--Optional:-->
                                       <bin:syntaxNode>
                                          <!--Optional:-->
                                          <syn:module>
                                             <!--Optional:-->
                                             <sour:byteStream/>
                                             <!--Optional:-->
                                             <sour:characterStream/>
                                             <!--Optional:-->
                                             <!--type: string-->
                                             <sour:code>?</sour:code>
                                             <!--Optional:-->
                                             <!--type: boolean-->
                                             <sour:modified>?</sour:modified>
                                             <!--Optional:-->
                                             <sour:params>
                                                <!--Zero or more repetitions:-->
                                                <def:entry>
                                                   <!--type: string-->
                                                   <def:key>?</def:key>
                                                   <!--Optional:-->
                                                   <def:value>?</def:value>
                                                </def:entry>
                                             </sour:params>
                                             <!--Optional:-->
                                             <!--type: int-->
                                             <sour:startPosition>?</sour:startPosition>
                                             <!--Optional:-->
                                             <!--type: string-->
                                             <sour:uri>?</sour:uri>
                                          </syn:module>
                                          <!--Optional:-->
                                          <!--type: int-->
                                          <syn:numberOfChildren>?</syn:numberOfChildren>
                                          <!--Optional:-->
                                          <syn:parent/>
                                          <!--Optional:-->
                                          <syn:sourceLocation>
                                             <!--Optional:-->
                                             <text:end/>
                                             <!--Optional:-->
                                             <text:start/>
                                             <!--Optional:-->
                                             <!--type: boolean-->
                                             <text:textLocation>?</text:textLocation>
                                          </syn:sourceLocation>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <syn:type>?</syn:type>
                                       </bin:syntaxNode>
                                       <!--Optional:-->
                                       <bin:targetNode/>
                                       <!--Optional:-->
                                       <bin:type/>
                                    </def:value>
                                 </def:entry>
                              </bin:typesMap>
                           </typ:dependencies>
                           <!--Optional:-->
                           <typ:properties>
                              <!--Zero or more repetitions:-->
                              <def:entry>
                                 <!--type: string-->
                                 <def:key>?</def:key>
                                 <!--Optional:-->
                                 <def:value>?</def:value>
                              </def:entry>
                           </typ:properties>
                           <!--Optional:-->
                           <typ:syntaxNode>
                              <!--Optional:-->
                              <syn:module>
                                 <!--Optional:-->
                                 <sour:byteStream/>
                                 <!--Optional:-->
                                 <sour:characterStream/>
                                 <!--Optional:-->
                                 <!--type: string-->
                                 <sour:code>?</sour:code>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <sour:modified>?</sour:modified>
                                 <!--Optional:-->
                                 <sour:params>
                                    <!--Zero or more repetitions:-->
                                    <def:entry>
                                       <!--type: string-->
                                       <def:key>?</def:key>
                                       <!--Optional:-->
                                       <def:value>?</def:value>
                                    </def:entry>
                                 </sour:params>
                                 <!--Optional:-->
                                 <!--type: int-->
                                 <sour:startPosition>?</sour:startPosition>
                                 <!--Optional:-->
                                 <!--type: string-->
                                 <sour:uri>?</sour:uri>
                              </syn:module>
                              <!--Optional:-->
                              <!--type: int-->
                              <syn:numberOfChildren>?</syn:numberOfChildren>
                              <!--Optional:-->
                              <syn:parent/>
                              <!--Optional:-->
                              <syn:sourceLocation>
                                 <!--Optional:-->
                                 <text:end/>
                                 <!--Optional:-->
                                 <text:start/>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <text:textLocation>?</text:textLocation>
                              </syn:sourceLocation>
                              <!--Optional:-->
                              <!--type: string-->
                              <syn:type>?</syn:type>
                           </typ:syntaxNode>
                        </typ:info>
                        <!--Optional:-->
                        <!--type: boolean-->
                        <typ:static>?</typ:static>
                        <!--Optional:-->
                        <typ:type/>
                        <!--Optional:-->
                        <!--type: boolean-->
                        <typ:const>?</typ:const>
                        <!--Optional:-->
                        <!--type: boolean-->
                        <typ:readable>?</typ:readable>
                        <!--Optional:-->
                        <!--type: boolean-->
                        <typ:writable>?</typ:writable>
                     </def:value>
                  </def:entry>
               </typ:declaredFields>
               <!--Optional:-->
               <typ:declaredMethods>
                  <!--Zero or more repetitions:-->
                  <typ:IOpenMethod>
                     <!--Optional:-->
                     <typ:declaringClass/>
                     <!--Optional:-->
                     <typ:info>
                        <!--Optional:-->
                        <!--type: string-->
                        <meta:sourceUrl>?</meta:sourceUrl>
                        <!--Optional:-->
                        <typ:dependencies>
                           <!--Optional:-->
                           <bin:assigned>
                              <!--Zero or more repetitions:-->
                              <typ:IOpenField>
                                 <!--Optional:-->
                                 <!--type: string-->
                                 <base:name>?</base:name>
                                 <!--Optional:-->
                                 <typ:declaringClass/>
                                 <!--Optional:-->
                                 <typ:info/>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <typ:static>?</typ:static>
                                 <!--Optional:-->
                                 <typ:type/>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <typ:const>?</typ:const>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <typ:readable>?</typ:readable>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <typ:writable>?</typ:writable>
                              </typ:IOpenField>
                           </bin:assigned>
                           <!--Optional:-->
                           <bin:assignedMap>
                              <!--Zero or more repetitions:-->
                              <def:entry>
                                 <def:key>
                                    <!--Optional:-->
                                    <!--type: string-->
                                    <base:name>?</base:name>
                                    <!--Optional:-->
                                    <typ:declaringClass/>
                                    <!--Optional:-->
                                    <typ:info/>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:static>?</typ:static>
                                    <!--Optional:-->
                                    <typ:type/>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:const>?</typ:const>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:readable>?</typ:readable>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:writable>?</typ:writable>
                                 </def:key>
                                 <!--Optional:-->
                                 <def:value>
                                    <!--Optional:-->
                                    <bin:children>
                                       <!--Zero or more repetitions:-->
                                       <bin:IBoundNode/>
                                    </bin:children>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:literalExpression>?</bin:literalExpression>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:lvalue>?</bin:lvalue>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:staticTarget>?</bin:staticTarget>
                                    <!--Optional:-->
                                    <bin:syntaxNode>
                                       <!--Optional:-->
                                       <syn:module>
                                          <!--Optional:-->
                                          <sour:byteStream/>
                                          <!--Optional:-->
                                          <sour:characterStream/>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <sour:code>?</sour:code>
                                          <!--Optional:-->
                                          <!--type: boolean-->
                                          <sour:modified>?</sour:modified>
                                          <!--Optional:-->
                                          <sour:params>
                                             <!--Zero or more repetitions:-->
                                             <def:entry>
                                                <!--type: string-->
                                                <def:key>?</def:key>
                                                <!--Optional:-->
                                                <def:value>?</def:value>
                                             </def:entry>
                                          </sour:params>
                                          <!--Optional:-->
                                          <!--type: int-->
                                          <sour:startPosition>?</sour:startPosition>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <sour:uri>?</sour:uri>
                                       </syn:module>
                                       <!--Optional:-->
                                       <!--type: int-->
                                       <syn:numberOfChildren>?</syn:numberOfChildren>
                                       <!--Optional:-->
                                       <syn:parent/>
                                       <!--Optional:-->
                                       <syn:sourceLocation>
                                          <!--Optional:-->
                                          <text:end/>
                                          <!--Optional:-->
                                          <text:start/>
                                          <!--Optional:-->
                                          <!--type: boolean-->
                                          <text:textLocation>?</text:textLocation>
                                       </syn:sourceLocation>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <syn:type>?</syn:type>
                                    </bin:syntaxNode>
                                    <!--Optional:-->
                                    <bin:targetNode/>
                                    <!--Optional:-->
                                    <bin:type/>
                                 </def:value>
                              </def:entry>
                           </bin:assignedMap>
                           <!--Optional:-->
                           <bin:fieldNodes>
                              <!--Zero or more repetitions:-->
                              <bin:IBoundNode>
                                 <!--Optional:-->
                                 <bin:children/>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <bin:literalExpression>?</bin:literalExpression>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <bin:lvalue>?</bin:lvalue>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <bin:staticTarget>?</bin:staticTarget>
                                 <!--Optional:-->
                                 <bin:syntaxNode>
                                    <!--Optional:-->
                                    <syn:module>
                                       <!--Optional:-->
                                       <sour:byteStream/>
                                       <!--Optional:-->
                                       <sour:characterStream/>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <sour:code>?</sour:code>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <sour:modified>?</sour:modified>
                                       <!--Optional:-->
                                       <sour:params>
                                          <!--Zero or more repetitions:-->
                                          <def:entry>
                                             <!--type: string-->
                                             <def:key>?</def:key>
                                             <!--Optional:-->
                                             <def:value>?</def:value>
                                          </def:entry>
                                       </sour:params>
                                       <!--Optional:-->
                                       <!--type: int-->
                                       <sour:startPosition>?</sour:startPosition>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <sour:uri>?</sour:uri>
                                    </syn:module>
                                    <!--Optional:-->
                                    <!--type: int-->
                                    <syn:numberOfChildren>?</syn:numberOfChildren>
                                    <!--Optional:-->
                                    <syn:parent/>
                                    <!--Optional:-->
                                    <syn:sourceLocation>
                                       <!--Optional:-->
                                       <text:end/>
                                       <!--Optional:-->
                                       <text:start/>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <text:textLocation>?</text:textLocation>
                                    </syn:sourceLocation>
                                    <!--Optional:-->
                                    <!--type: string-->
                                    <syn:type>?</syn:type>
                                 </bin:syntaxNode>
                                 <!--Optional:-->
                                 <bin:targetNode/>
                                 <!--Optional:-->
                                 <bin:type/>
                              </bin:IBoundNode>
                           </bin:fieldNodes>
                           <!--Optional:-->
                           <bin:fieldsMap>
                              <!--Zero or more repetitions:-->
                              <def:entry>
                                 <def:key>
                                    <!--Optional:-->
                                    <bin:children>
                                       <!--Zero or more repetitions:-->
                                       <bin:IBoundNode/>
                                    </bin:children>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:literalExpression>?</bin:literalExpression>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:lvalue>?</bin:lvalue>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:staticTarget>?</bin:staticTarget>
                                    <!--Optional:-->
                                    <bin:syntaxNode>
                                       <!--Optional:-->
                                       <syn:module>
                                          <!--Optional:-->
                                          <sour:byteStream/>
                                          <!--Optional:-->
                                          <sour:characterStream/>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <sour:code>?</sour:code>
                                          <!--Optional:-->
                                          <!--type: boolean-->
                                          <sour:modified>?</sour:modified>
                                          <!--Optional:-->
                                          <sour:params>
                                             <!--Zero or more repetitions:-->
                                             <def:entry>
                                                <!--type: string-->
                                                <def:key>?</def:key>
                                                <!--Optional:-->
                                                <def:value>?</def:value>
                                             </def:entry>
                                          </sour:params>
                                          <!--Optional:-->
                                          <!--type: int-->
                                          <sour:startPosition>?</sour:startPosition>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <sour:uri>?</sour:uri>
                                       </syn:module>
                                       <!--Optional:-->
                                       <!--type: int-->
                                       <syn:numberOfChildren>?</syn:numberOfChildren>
                                       <!--Optional:-->
                                       <syn:parent/>
                                       <!--Optional:-->
                                       <syn:sourceLocation>
                                          <!--Optional:-->
                                          <text:end/>
                                          <!--Optional:-->
                                          <text:start/>
                                          <!--Optional:-->
                                          <!--type: boolean-->
                                          <text:textLocation>?</text:textLocation>
                                       </syn:sourceLocation>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <syn:type>?</syn:type>
                                    </bin:syntaxNode>
                                    <!--Optional:-->
                                    <bin:targetNode/>
                                    <!--Optional:-->
                                    <bin:type/>
                                 </def:key>
                                 <!--Optional:-->
                                 <def:value>
                                    <!--Optional:-->
                                    <!--type: string-->
                                    <base:name>?</base:name>
                                    <!--Optional:-->
                                    <typ:declaringClass/>
                                    <!--Optional:-->
                                    <typ:info/>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:static>?</typ:static>
                                    <!--Optional:-->
                                    <typ:type/>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:const>?</typ:const>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:readable>?</typ:readable>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:writable>?</typ:writable>
                                 </def:value>
                              </def:entry>
                           </bin:fieldsMap>
                           <!--Optional:-->
                           <bin:methods/>
                           <!--Optional:-->
                           <bin:rulesMethods>
                              <!--Zero or more repetitions:-->
                              <impl:ExecutableMethod>
                                 <!--Optional:-->
                                 <impl:declaringClass/>
                                 <!--Optional:-->
                                 <impl:header>
                                    <!--Optional:-->
                                    <!--type: string-->
                                    <base:name>?</base:name>
                                    <!--Optional:-->
                                    <typ:declaringClass/>
                                    <!--Optional:-->
                                    <typ:info/>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:static>?</typ:static>
                                    <!--Optional:-->
                                    <typ:type/>
                                    <!--Optional:-->
                                    <typ:signature>
                                       <!--Optional:-->
                                       <!--type: int-->
                                       <typ:numberOfParameters>?</typ:numberOfParameters>
                                       <!--Optional:-->
                                       <typ:parameterTypes>
                                          <!--Zero or more repetitions:-->
                                          <typ:IOpenClass/>
                                       </typ:parameterTypes>
                                    </typ:signature>
                                 </impl:header>
                                 <!--Optional:-->
                                 <impl:info/>
                                 <!--Optional:-->
                                 <impl:method/>
                                 <!--Optional:-->
                                 <!--type: string-->
                                 <impl:moduleName>?</impl:moduleName>
                                 <!--Optional:-->
                                 <!--type: string-->
                                 <impl:name>?</impl:name>
                                 <!--Optional:-->
                                 <impl:signature>
                                    <!--Optional:-->
                                    <!--type: int-->
                                    <typ:numberOfParameters>?</typ:numberOfParameters>
                                    <!--Optional:-->
                                    <typ:parameterTypes>
                                       <!--Zero or more repetitions:-->
                                       <typ:IOpenClass/>
                                    </typ:parameterTypes>
                                 </impl:signature>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <impl:static>?</impl:static>
                                 <!--Optional:-->
                                 <impl:type/>
                              </impl:ExecutableMethod>
                           </bin:rulesMethods>
                           <!--Optional:-->
                           <bin:types>
                              <!--Zero or more repetitions:-->
                              <typ:IOpenClass/>
                           </bin:types>
                           <!--Optional:-->
                           <bin:typesMap>
                              <!--Zero or more repetitions:-->
                              <def:entry>
                                 <def:key/>
                                 <!--Optional:-->
                                 <def:value>
                                    <!--Optional:-->
                                    <bin:children>
                                       <!--Zero or more repetitions:-->
                                       <bin:IBoundNode/>
                                    </bin:children>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:literalExpression>?</bin:literalExpression>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:lvalue>?</bin:lvalue>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:staticTarget>?</bin:staticTarget>
                                    <!--Optional:-->
                                    <bin:syntaxNode>
                                       <!--Optional:-->
                                       <syn:module>
                                          <!--Optional:-->
                                          <sour:byteStream/>
                                          <!--Optional:-->
                                          <sour:characterStream/>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <sour:code>?</sour:code>
                                          <!--Optional:-->
                                          <!--type: boolean-->
                                          <sour:modified>?</sour:modified>
                                          <!--Optional:-->
                                          <sour:params>
                                             <!--Zero or more repetitions:-->
                                             <def:entry>
                                                <!--type: string-->
                                                <def:key>?</def:key>
                                                <!--Optional:-->
                                                <def:value>?</def:value>
                                             </def:entry>
                                          </sour:params>
                                          <!--Optional:-->
                                          <!--type: int-->
                                          <sour:startPosition>?</sour:startPosition>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <sour:uri>?</sour:uri>
                                       </syn:module>
                                       <!--Optional:-->
                                       <!--type: int-->
                                       <syn:numberOfChildren>?</syn:numberOfChildren>
                                       <!--Optional:-->
                                       <syn:parent/>
                                       <!--Optional:-->
                                       <syn:sourceLocation>
                                          <!--Optional:-->
                                          <text:end/>
                                          <!--Optional:-->
                                          <text:start/>
                                          <!--Optional:-->
                                          <!--type: boolean-->
                                          <text:textLocation>?</text:textLocation>
                                       </syn:sourceLocation>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <syn:type>?</syn:type>
                                    </bin:syntaxNode>
                                    <!--Optional:-->
                                    <bin:targetNode/>
                                    <!--Optional:-->
                                    <bin:type/>
                                 </def:value>
                              </def:entry>
                           </bin:typesMap>
                        </typ:dependencies>
                        <!--Optional:-->
                        <typ:properties>
                           <!--Zero or more repetitions:-->
                           <def:entry>
                              <!--type: string-->
                              <def:key>?</def:key>
                              <!--Optional:-->
                              <def:value>?</def:value>
                           </def:entry>
                        </typ:properties>
                        <!--Optional:-->
                        <typ:syntaxNode>
                           <!--Optional:-->
                           <syn:module>
                              <!--Optional:-->
                              <sour:byteStream/>
                              <!--Optional:-->
                              <sour:characterStream/>
                              <!--Optional:-->
                              <!--type: string-->
                              <sour:code>?</sour:code>
                              <!--Optional:-->
                              <!--type: boolean-->
                              <sour:modified>?</sour:modified>
                              <!--Optional:-->
                              <sour:params>
                                 <!--Zero or more repetitions:-->
                                 <def:entry>
                                    <!--type: string-->
                                    <def:key>?</def:key>
                                    <!--Optional:-->
                                    <def:value>?</def:value>
                                 </def:entry>
                              </sour:params>
                              <!--Optional:-->
                              <!--type: int-->
                              <sour:startPosition>?</sour:startPosition>
                              <!--Optional:-->
                              <!--type: string-->
                              <sour:uri>?</sour:uri>
                           </syn:module>
                           <!--Optional:-->
                           <!--type: int-->
                           <syn:numberOfChildren>?</syn:numberOfChildren>
                           <!--Optional:-->
                           <syn:parent/>
                           <!--Optional:-->
                           <syn:sourceLocation>
                              <!--Optional:-->
                              <text:end/>
                              <!--Optional:-->
                              <text:start/>
                              <!--Optional:-->
                              <!--type: boolean-->
                              <text:textLocation>?</text:textLocation>
                           </syn:sourceLocation>
                           <!--Optional:-->
                           <!--type: string-->
                           <syn:type>?</syn:type>
                        </typ:syntaxNode>
                     </typ:info>
                     <!--Optional:-->
                     <typ:method/>
                     <!--Optional:-->
                     <!--type: string-->
                     <typ:name>?</typ:name>
                     <!--Optional:-->
                     <typ:signature>
                        <!--Optional:-->
                        <!--type: int-->
                        <typ:numberOfParameters>?</typ:numberOfParameters>
                        <!--Optional:-->
                        <typ:parameterTypes>
                           <!--Zero or more repetitions:-->
                           <typ:IOpenClass/>
                        </typ:parameterTypes>
                     </typ:signature>
                     <!--Optional:-->
                     <!--type: boolean-->
                     <typ:static>?</typ:static>
                     <!--Optional:-->
                     <typ:type/>
                  </typ:IOpenMethod>
               </typ:declaredMethods>
               <!--Optional:-->
               <typ:domain>
                  <!--Optional:-->
                  <dom:elementType>
                     <!--Optional:-->
                     <!--type: string-->
                     <base:name>?</base:name>
                     <!--Optional:-->
                     <!--type: string-->
                     <base:nameSpace>?</base:nameSpace>
                     <!--Optional:-->
                     <dom:domain/>
                  </dom:elementType>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <dom:finite>?</dom:finite>
               </typ:domain>
               <!--Optional:-->
               <typ:fields>
                  <!--Zero or more repetitions:-->
                  <def:entry>
                     <!--type: string-->
                     <def:key>?</def:key>
                     <!--Optional:-->
                     <def:value>
                        <!--Optional:-->
                        <!--type: string-->
                        <base:name>?</base:name>
                        <!--Optional:-->
                        <typ:declaringClass/>
                        <!--Optional:-->
                        <typ:info>
                           <!--Optional:-->
                           <!--type: string-->
                           <meta:sourceUrl>?</meta:sourceUrl>
                           <!--Optional:-->
                           <typ:dependencies>
                              <!--Optional:-->
                              <bin:assigned>
                                 <!--Zero or more repetitions:-->
                                 <typ:IOpenField/>
                              </bin:assigned>
                              <!--Optional:-->
                              <bin:assignedMap>
                                 <!--Zero or more repetitions:-->
                                 <def:entry>
                                    <def:key/>
                                    <!--Optional:-->
                                    <def:value>
                                       <!--Optional:-->
                                       <bin:children>
                                          <!--Zero or more repetitions:-->
                                          <bin:IBoundNode/>
                                       </bin:children>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <bin:literalExpression>?</bin:literalExpression>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <bin:lvalue>?</bin:lvalue>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <bin:staticTarget>?</bin:staticTarget>
                                       <!--Optional:-->
                                       <bin:syntaxNode>
                                          <!--Optional:-->
                                          <syn:module>
                                             <!--Optional:-->
                                             <sour:byteStream/>
                                             <!--Optional:-->
                                             <sour:characterStream/>
                                             <!--Optional:-->
                                             <!--type: string-->
                                             <sour:code>?</sour:code>
                                             <!--Optional:-->
                                             <!--type: boolean-->
                                             <sour:modified>?</sour:modified>
                                             <!--Optional:-->
                                             <sour:params>
                                                <!--Zero or more repetitions:-->
                                                <def:entry>
                                                   <!--type: string-->
                                                   <def:key>?</def:key>
                                                   <!--Optional:-->
                                                   <def:value>?</def:value>
                                                </def:entry>
                                             </sour:params>
                                             <!--Optional:-->
                                             <!--type: int-->
                                             <sour:startPosition>?</sour:startPosition>
                                             <!--Optional:-->
                                             <!--type: string-->
                                             <sour:uri>?</sour:uri>
                                          </syn:module>
                                          <!--Optional:-->
                                          <!--type: int-->
                                          <syn:numberOfChildren>?</syn:numberOfChildren>
                                          <!--Optional:-->
                                          <syn:parent/>
                                          <!--Optional:-->
                                          <syn:sourceLocation>
                                             <!--Optional:-->
                                             <text:end/>
                                             <!--Optional:-->
                                             <text:start/>
                                             <!--Optional:-->
                                             <!--type: boolean-->
                                             <text:textLocation>?</text:textLocation>
                                          </syn:sourceLocation>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <syn:type>?</syn:type>
                                       </bin:syntaxNode>
                                       <!--Optional:-->
                                       <bin:targetNode/>
                                       <!--Optional:-->
                                       <bin:type/>
                                    </def:value>
                                 </def:entry>
                              </bin:assignedMap>
                              <!--Optional:-->
                              <bin:fieldNodes>
                                 <!--Zero or more repetitions:-->
                                 <bin:IBoundNode>
                                    <!--Optional:-->
                                    <bin:children/>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:literalExpression>?</bin:literalExpression>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:lvalue>?</bin:lvalue>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:staticTarget>?</bin:staticTarget>
                                    <!--Optional:-->
                                    <bin:syntaxNode>
                                       <!--Optional:-->
                                       <syn:module>
                                          <!--Optional:-->
                                          <sour:byteStream/>
                                          <!--Optional:-->
                                          <sour:characterStream/>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <sour:code>?</sour:code>
                                          <!--Optional:-->
                                          <!--type: boolean-->
                                          <sour:modified>?</sour:modified>
                                          <!--Optional:-->
                                          <sour:params>
                                             <!--Zero or more repetitions:-->
                                             <def:entry>
                                                <!--type: string-->
                                                <def:key>?</def:key>
                                                <!--Optional:-->
                                                <def:value>?</def:value>
                                             </def:entry>
                                          </sour:params>
                                          <!--Optional:-->
                                          <!--type: int-->
                                          <sour:startPosition>?</sour:startPosition>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <sour:uri>?</sour:uri>
                                       </syn:module>
                                       <!--Optional:-->
                                       <!--type: int-->
                                       <syn:numberOfChildren>?</syn:numberOfChildren>
                                       <!--Optional:-->
                                       <syn:parent/>
                                       <!--Optional:-->
                                       <syn:sourceLocation>
                                          <!--Optional:-->
                                          <text:end/>
                                          <!--Optional:-->
                                          <text:start/>
                                          <!--Optional:-->
                                          <!--type: boolean-->
                                          <text:textLocation>?</text:textLocation>
                                       </syn:sourceLocation>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <syn:type>?</syn:type>
                                    </bin:syntaxNode>
                                    <!--Optional:-->
                                    <bin:targetNode/>
                                    <!--Optional:-->
                                    <bin:type/>
                                 </bin:IBoundNode>
                              </bin:fieldNodes>
                              <!--Optional:-->
                              <bin:fieldsMap>
                                 <!--Zero or more repetitions:-->
                                 <def:entry>
                                    <def:key>
                                       <!--Optional:-->
                                       <bin:children>
                                          <!--Zero or more repetitions:-->
                                          <bin:IBoundNode/>
                                       </bin:children>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <bin:literalExpression>?</bin:literalExpression>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <bin:lvalue>?</bin:lvalue>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <bin:staticTarget>?</bin:staticTarget>
                                       <!--Optional:-->
                                       <bin:syntaxNode>
                                          <!--Optional:-->
                                          <syn:module>
                                             <!--Optional:-->
                                             <sour:byteStream/>
                                             <!--Optional:-->
                                             <sour:characterStream/>
                                             <!--Optional:-->
                                             <!--type: string-->
                                             <sour:code>?</sour:code>
                                             <!--Optional:-->
                                             <!--type: boolean-->
                                             <sour:modified>?</sour:modified>
                                             <!--Optional:-->
                                             <sour:params>
                                                <!--Zero or more repetitions:-->
                                                <def:entry>
                                                   <!--type: string-->
                                                   <def:key>?</def:key>
                                                   <!--Optional:-->
                                                   <def:value>?</def:value>
                                                </def:entry>
                                             </sour:params>
                                             <!--Optional:-->
                                             <!--type: int-->
                                             <sour:startPosition>?</sour:startPosition>
                                             <!--Optional:-->
                                             <!--type: string-->
                                             <sour:uri>?</sour:uri>
                                          </syn:module>
                                          <!--Optional:-->
                                          <!--type: int-->
                                          <syn:numberOfChildren>?</syn:numberOfChildren>
                                          <!--Optional:-->
                                          <syn:parent/>
                                          <!--Optional:-->
                                          <syn:sourceLocation>
                                             <!--Optional:-->
                                             <text:end/>
                                             <!--Optional:-->
                                             <text:start/>
                                             <!--Optional:-->
                                             <!--type: boolean-->
                                             <text:textLocation>?</text:textLocation>
                                          </syn:sourceLocation>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <syn:type>?</syn:type>
                                       </bin:syntaxNode>
                                       <!--Optional:-->
                                       <bin:targetNode/>
                                       <!--Optional:-->
                                       <bin:type/>
                                    </def:key>
                                    <!--Optional:-->
                                    <def:value/>
                                 </def:entry>
                              </bin:fieldsMap>
                              <!--Optional:-->
                              <bin:methods>
                                 <!--Zero or more repetitions:-->
                                 <typ:IOpenMethod>
                                    <!--Optional:-->
                                    <typ:declaringClass/>
                                    <!--Optional:-->
                                    <typ:info/>
                                    <!--Optional:-->
                                    <typ:method/>
                                    <!--Optional:-->
                                    <!--type: string-->
                                    <typ:name>?</typ:name>
                                    <!--Optional:-->
                                    <typ:signature>
                                       <!--Optional:-->
                                       <!--type: int-->
                                       <typ:numberOfParameters>?</typ:numberOfParameters>
                                       <!--Optional:-->
                                       <typ:parameterTypes>
                                          <!--Zero or more repetitions:-->
                                          <typ:IOpenClass/>
                                       </typ:parameterTypes>
                                    </typ:signature>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:static>?</typ:static>
                                    <!--Optional:-->
                                    <typ:type/>
                                 </typ:IOpenMethod>
                              </bin:methods>
                              <!--Optional:-->
                              <bin:rulesMethods>
                                 <!--Zero or more repetitions:-->
                                 <impl:ExecutableMethod>
                                    <!--Optional:-->
                                    <impl:declaringClass/>
                                    <!--Optional:-->
                                    <impl:header>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <base:name>?</base:name>
                                       <!--Optional:-->
                                       <typ:declaringClass/>
                                       <!--Optional:-->
                                       <typ:info/>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <typ:static>?</typ:static>
                                       <!--Optional:-->
                                       <typ:type/>
                                       <!--Optional:-->
                                       <typ:signature>
                                          <!--Optional:-->
                                          <!--type: int-->
                                          <typ:numberOfParameters>?</typ:numberOfParameters>
                                          <!--Optional:-->
                                          <typ:parameterTypes>
                                             <!--Zero or more repetitions:-->
                                             <typ:IOpenClass/>
                                          </typ:parameterTypes>
                                       </typ:signature>
                                    </impl:header>
                                    <!--Optional:-->
                                    <impl:info/>
                                    <!--Optional:-->
                                    <impl:method>
                                       <!--Optional:-->
                                       <typ:declaringClass/>
                                       <!--Optional:-->
                                       <typ:info/>
                                       <!--Optional:-->
                                       <typ:method/>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <typ:name>?</typ:name>
                                       <!--Optional:-->
                                       <typ:signature>
                                          <!--Optional:-->
                                          <!--type: int-->
                                          <typ:numberOfParameters>?</typ:numberOfParameters>
                                          <!--Optional:-->
                                          <typ:parameterTypes>
                                             <!--Zero or more repetitions:-->
                                             <typ:IOpenClass/>
                                          </typ:parameterTypes>
                                       </typ:signature>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <typ:static>?</typ:static>
                                       <!--Optional:-->
                                       <typ:type/>
                                    </impl:method>
                                    <!--Optional:-->
                                    <!--type: string-->
                                    <impl:moduleName>?</impl:moduleName>
                                    <!--Optional:-->
                                    <!--type: string-->
                                    <impl:name>?</impl:name>
                                    <!--Optional:-->
                                    <impl:signature>
                                       <!--Optional:-->
                                       <!--type: int-->
                                       <typ:numberOfParameters>?</typ:numberOfParameters>
                                       <!--Optional:-->
                                       <typ:parameterTypes>
                                          <!--Zero or more repetitions:-->
                                          <typ:IOpenClass/>
                                       </typ:parameterTypes>
                                    </impl:signature>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <impl:static>?</impl:static>
                                    <!--Optional:-->
                                    <impl:type/>
                                 </impl:ExecutableMethod>
                              </bin:rulesMethods>
                              <!--Optional:-->
                              <bin:types>
                                 <!--Zero or more repetitions:-->
                                 <typ:IOpenClass/>
                              </bin:types>
                              <!--Optional:-->
                              <bin:typesMap>
                                 <!--Zero or more repetitions:-->
                                 <def:entry>
                                    <def:key/>
                                    <!--Optional:-->
                                    <def:value>
                                       <!--Optional:-->
                                       <bin:children>
                                          <!--Zero or more repetitions:-->
                                          <bin:IBoundNode/>
                                       </bin:children>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <bin:literalExpression>?</bin:literalExpression>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <bin:lvalue>?</bin:lvalue>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <bin:staticTarget>?</bin:staticTarget>
                                       <!--Optional:-->
                                       <bin:syntaxNode>
                                          <!--Optional:-->
                                          <syn:module>
                                             <!--Optional:-->
                                             <sour:byteStream/>
                                             <!--Optional:-->
                                             <sour:characterStream/>
                                             <!--Optional:-->
                                             <!--type: string-->
                                             <sour:code>?</sour:code>
                                             <!--Optional:-->
                                             <!--type: boolean-->
                                             <sour:modified>?</sour:modified>
                                             <!--Optional:-->
                                             <sour:params>
                                                <!--Zero or more repetitions:-->
                                                <def:entry>
                                                   <!--type: string-->
                                                   <def:key>?</def:key>
                                                   <!--Optional:-->
                                                   <def:value>?</def:value>
                                                </def:entry>
                                             </sour:params>
                                             <!--Optional:-->
                                             <!--type: int-->
                                             <sour:startPosition>?</sour:startPosition>
                                             <!--Optional:-->
                                             <!--type: string-->
                                             <sour:uri>?</sour:uri>
                                          </syn:module>
                                          <!--Optional:-->
                                          <!--type: int-->
                                          <syn:numberOfChildren>?</syn:numberOfChildren>
                                          <!--Optional:-->
                                          <syn:parent/>
                                          <!--Optional:-->
                                          <syn:sourceLocation>
                                             <!--Optional:-->
                                             <text:end/>
                                             <!--Optional:-->
                                             <text:start/>
                                             <!--Optional:-->
                                             <!--type: boolean-->
                                             <text:textLocation>?</text:textLocation>
                                          </syn:sourceLocation>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <syn:type>?</syn:type>
                                       </bin:syntaxNode>
                                       <!--Optional:-->
                                       <bin:targetNode/>
                                       <!--Optional:-->
                                       <bin:type/>
                                    </def:value>
                                 </def:entry>
                              </bin:typesMap>
                           </typ:dependencies>
                           <!--Optional:-->
                           <typ:properties>
                              <!--Zero or more repetitions:-->
                              <def:entry>
                                 <!--type: string-->
                                 <def:key>?</def:key>
                                 <!--Optional:-->
                                 <def:value>?</def:value>
                              </def:entry>
                           </typ:properties>
                           <!--Optional:-->
                           <typ:syntaxNode>
                              <!--Optional:-->
                              <syn:module>
                                 <!--Optional:-->
                                 <sour:byteStream/>
                                 <!--Optional:-->
                                 <sour:characterStream/>
                                 <!--Optional:-->
                                 <!--type: string-->
                                 <sour:code>?</sour:code>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <sour:modified>?</sour:modified>
                                 <!--Optional:-->
                                 <sour:params>
                                    <!--Zero or more repetitions:-->
                                    <def:entry>
                                       <!--type: string-->
                                       <def:key>?</def:key>
                                       <!--Optional:-->
                                       <def:value>?</def:value>
                                    </def:entry>
                                 </sour:params>
                                 <!--Optional:-->
                                 <!--type: int-->
                                 <sour:startPosition>?</sour:startPosition>
                                 <!--Optional:-->
                                 <!--type: string-->
                                 <sour:uri>?</sour:uri>
                              </syn:module>
                              <!--Optional:-->
                              <!--type: int-->
                              <syn:numberOfChildren>?</syn:numberOfChildren>
                              <!--Optional:-->
                              <syn:parent/>
                              <!--Optional:-->
                              <syn:sourceLocation>
                                 <!--Optional:-->
                                 <text:end/>
                                 <!--Optional:-->
                                 <text:start/>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <text:textLocation>?</text:textLocation>
                              </syn:sourceLocation>
                              <!--Optional:-->
                              <!--type: string-->
                              <syn:type>?</syn:type>
                           </typ:syntaxNode>
                        </typ:info>
                        <!--Optional:-->
                        <!--type: boolean-->
                        <typ:static>?</typ:static>
                        <!--Optional:-->
                        <typ:type/>
                        <!--Optional:-->
                        <!--type: boolean-->
                        <typ:const>?</typ:const>
                        <!--Optional:-->
                        <!--type: boolean-->
                        <typ:readable>?</typ:readable>
                        <!--Optional:-->
                        <!--type: boolean-->
                        <typ:writable>?</typ:writable>
                     </def:value>
                  </def:entry>
               </typ:fields>
               <!--Optional:-->
               <typ:indexField>
                  <!--Optional:-->
                  <!--type: string-->
                  <base:name>?</base:name>
                  <!--Optional:-->
                  <typ:declaringClass/>
                  <!--Optional:-->
                  <typ:info>
                     <!--Optional:-->
                     <!--type: string-->
                     <meta:sourceUrl>?</meta:sourceUrl>
                     <!--Optional:-->
                     <typ:dependencies>
                        <!--Optional:-->
                        <bin:assigned>
                           <!--Zero or more repetitions:-->
                           <typ:IOpenField/>
                        </bin:assigned>
                        <!--Optional:-->
                        <bin:assignedMap>
                           <!--Zero or more repetitions:-->
                           <def:entry>
                              <def:key/>
                              <!--Optional:-->
                              <def:value>
                                 <!--Optional:-->
                                 <bin:children>
                                    <!--Zero or more repetitions:-->
                                    <bin:IBoundNode/>
                                 </bin:children>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <bin:literalExpression>?</bin:literalExpression>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <bin:lvalue>?</bin:lvalue>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <bin:staticTarget>?</bin:staticTarget>
                                 <!--Optional:-->
                                 <bin:syntaxNode>
                                    <!--Optional:-->
                                    <syn:module>
                                       <!--Optional:-->
                                       <sour:byteStream/>
                                       <!--Optional:-->
                                       <sour:characterStream/>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <sour:code>?</sour:code>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <sour:modified>?</sour:modified>
                                       <!--Optional:-->
                                       <sour:params>
                                          <!--Zero or more repetitions:-->
                                          <def:entry>
                                             <!--type: string-->
                                             <def:key>?</def:key>
                                             <!--Optional:-->
                                             <def:value>?</def:value>
                                          </def:entry>
                                       </sour:params>
                                       <!--Optional:-->
                                       <!--type: int-->
                                       <sour:startPosition>?</sour:startPosition>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <sour:uri>?</sour:uri>
                                    </syn:module>
                                    <!--Optional:-->
                                    <!--type: int-->
                                    <syn:numberOfChildren>?</syn:numberOfChildren>
                                    <!--Optional:-->
                                    <syn:parent/>
                                    <!--Optional:-->
                                    <syn:sourceLocation>
                                       <!--Optional:-->
                                       <text:end/>
                                       <!--Optional:-->
                                       <text:start/>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <text:textLocation>?</text:textLocation>
                                    </syn:sourceLocation>
                                    <!--Optional:-->
                                    <!--type: string-->
                                    <syn:type>?</syn:type>
                                 </bin:syntaxNode>
                                 <!--Optional:-->
                                 <bin:targetNode/>
                                 <!--Optional:-->
                                 <bin:type/>
                              </def:value>
                           </def:entry>
                        </bin:assignedMap>
                        <!--Optional:-->
                        <bin:fieldNodes>
                           <!--Zero or more repetitions:-->
                           <bin:IBoundNode>
                              <!--Optional:-->
                              <bin:children/>
                              <!--Optional:-->
                              <!--type: boolean-->
                              <bin:literalExpression>?</bin:literalExpression>
                              <!--Optional:-->
                              <!--type: boolean-->
                              <bin:lvalue>?</bin:lvalue>
                              <!--Optional:-->
                              <!--type: boolean-->
                              <bin:staticTarget>?</bin:staticTarget>
                              <!--Optional:-->
                              <bin:syntaxNode>
                                 <!--Optional:-->
                                 <syn:module>
                                    <!--Optional:-->
                                    <sour:byteStream/>
                                    <!--Optional:-->
                                    <sour:characterStream/>
                                    <!--Optional:-->
                                    <!--type: string-->
                                    <sour:code>?</sour:code>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <sour:modified>?</sour:modified>
                                    <!--Optional:-->
                                    <sour:params>
                                       <!--Zero or more repetitions:-->
                                       <def:entry>
                                          <!--type: string-->
                                          <def:key>?</def:key>
                                          <!--Optional:-->
                                          <def:value>?</def:value>
                                       </def:entry>
                                    </sour:params>
                                    <!--Optional:-->
                                    <!--type: int-->
                                    <sour:startPosition>?</sour:startPosition>
                                    <!--Optional:-->
                                    <!--type: string-->
                                    <sour:uri>?</sour:uri>
                                 </syn:module>
                                 <!--Optional:-->
                                 <!--type: int-->
                                 <syn:numberOfChildren>?</syn:numberOfChildren>
                                 <!--Optional:-->
                                 <syn:parent/>
                                 <!--Optional:-->
                                 <syn:sourceLocation>
                                    <!--Optional:-->
                                    <text:end/>
                                    <!--Optional:-->
                                    <text:start/>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <text:textLocation>?</text:textLocation>
                                 </syn:sourceLocation>
                                 <!--Optional:-->
                                 <!--type: string-->
                                 <syn:type>?</syn:type>
                              </bin:syntaxNode>
                              <!--Optional:-->
                              <bin:targetNode/>
                              <!--Optional:-->
                              <bin:type/>
                           </bin:IBoundNode>
                        </bin:fieldNodes>
                        <!--Optional:-->
                        <bin:fieldsMap>
                           <!--Zero or more repetitions:-->
                           <def:entry>
                              <def:key>
                                 <!--Optional:-->
                                 <bin:children>
                                    <!--Zero or more repetitions:-->
                                    <bin:IBoundNode/>
                                 </bin:children>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <bin:literalExpression>?</bin:literalExpression>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <bin:lvalue>?</bin:lvalue>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <bin:staticTarget>?</bin:staticTarget>
                                 <!--Optional:-->
                                 <bin:syntaxNode>
                                    <!--Optional:-->
                                    <syn:module>
                                       <!--Optional:-->
                                       <sour:byteStream/>
                                       <!--Optional:-->
                                       <sour:characterStream/>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <sour:code>?</sour:code>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <sour:modified>?</sour:modified>
                                       <!--Optional:-->
                                       <sour:params>
                                          <!--Zero or more repetitions:-->
                                          <def:entry>
                                             <!--type: string-->
                                             <def:key>?</def:key>
                                             <!--Optional:-->
                                             <def:value>?</def:value>
                                          </def:entry>
                                       </sour:params>
                                       <!--Optional:-->
                                       <!--type: int-->
                                       <sour:startPosition>?</sour:startPosition>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <sour:uri>?</sour:uri>
                                    </syn:module>
                                    <!--Optional:-->
                                    <!--type: int-->
                                    <syn:numberOfChildren>?</syn:numberOfChildren>
                                    <!--Optional:-->
                                    <syn:parent/>
                                    <!--Optional:-->
                                    <syn:sourceLocation>
                                       <!--Optional:-->
                                       <text:end/>
                                       <!--Optional:-->
                                       <text:start/>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <text:textLocation>?</text:textLocation>
                                    </syn:sourceLocation>
                                    <!--Optional:-->
                                    <!--type: string-->
                                    <syn:type>?</syn:type>
                                 </bin:syntaxNode>
                                 <!--Optional:-->
                                 <bin:targetNode/>
                                 <!--Optional:-->
                                 <bin:type/>
                              </def:key>
                              <!--Optional:-->
                              <def:value/>
                           </def:entry>
                        </bin:fieldsMap>
                        <!--Optional:-->
                        <bin:methods>
                           <!--Zero or more repetitions:-->
                           <typ:IOpenMethod>
                              <!--Optional:-->
                              <typ:declaringClass/>
                              <!--Optional:-->
                              <typ:info/>
                              <!--Optional:-->
                              <typ:method/>
                              <!--Optional:-->
                              <!--type: string-->
                              <typ:name>?</typ:name>
                              <!--Optional:-->
                              <typ:signature>
                                 <!--Optional:-->
                                 <!--type: int-->
                                 <typ:numberOfParameters>?</typ:numberOfParameters>
                                 <!--Optional:-->
                                 <typ:parameterTypes>
                                    <!--Zero or more repetitions:-->
                                    <typ:IOpenClass/>
                                 </typ:parameterTypes>
                              </typ:signature>
                              <!--Optional:-->
                              <!--type: boolean-->
                              <typ:static>?</typ:static>
                              <!--Optional:-->
                              <typ:type/>
                           </typ:IOpenMethod>
                        </bin:methods>
                        <!--Optional:-->
                        <bin:rulesMethods>
                           <!--Zero or more repetitions:-->
                           <impl:ExecutableMethod>
                              <!--Optional:-->
                              <impl:declaringClass/>
                              <!--Optional:-->
                              <impl:header>
                                 <!--Optional:-->
                                 <!--type: string-->
                                 <base:name>?</base:name>
                                 <!--Optional:-->
                                 <typ:declaringClass/>
                                 <!--Optional:-->
                                 <typ:info/>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <typ:static>?</typ:static>
                                 <!--Optional:-->
                                 <typ:type/>
                                 <!--Optional:-->
                                 <typ:signature>
                                    <!--Optional:-->
                                    <!--type: int-->
                                    <typ:numberOfParameters>?</typ:numberOfParameters>
                                    <!--Optional:-->
                                    <typ:parameterTypes>
                                       <!--Zero or more repetitions:-->
                                       <typ:IOpenClass/>
                                    </typ:parameterTypes>
                                 </typ:signature>
                              </impl:header>
                              <!--Optional:-->
                              <impl:info/>
                              <!--Optional:-->
                              <impl:method>
                                 <!--Optional:-->
                                 <typ:declaringClass/>
                                 <!--Optional:-->
                                 <typ:info/>
                                 <!--Optional:-->
                                 <typ:method/>
                                 <!--Optional:-->
                                 <!--type: string-->
                                 <typ:name>?</typ:name>
                                 <!--Optional:-->
                                 <typ:signature>
                                    <!--Optional:-->
                                    <!--type: int-->
                                    <typ:numberOfParameters>?</typ:numberOfParameters>
                                    <!--Optional:-->
                                    <typ:parameterTypes>
                                       <!--Zero or more repetitions:-->
                                       <typ:IOpenClass/>
                                    </typ:parameterTypes>
                                 </typ:signature>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <typ:static>?</typ:static>
                                 <!--Optional:-->
                                 <typ:type/>
                              </impl:method>
                              <!--Optional:-->
                              <!--type: string-->
                              <impl:moduleName>?</impl:moduleName>
                              <!--Optional:-->
                              <!--type: string-->
                              <impl:name>?</impl:name>
                              <!--Optional:-->
                              <impl:signature>
                                 <!--Optional:-->
                                 <!--type: int-->
                                 <typ:numberOfParameters>?</typ:numberOfParameters>
                                 <!--Optional:-->
                                 <typ:parameterTypes>
                                    <!--Zero or more repetitions:-->
                                    <typ:IOpenClass/>
                                 </typ:parameterTypes>
                              </impl:signature>
                              <!--Optional:-->
                              <!--type: boolean-->
                              <impl:static>?</impl:static>
                              <!--Optional:-->
                              <impl:type/>
                           </impl:ExecutableMethod>
                        </bin:rulesMethods>
                        <!--Optional:-->
                        <bin:types>
                           <!--Zero or more repetitions:-->
                           <typ:IOpenClass/>
                        </bin:types>
                        <!--Optional:-->
                        <bin:typesMap>
                           <!--Zero or more repetitions:-->
                           <def:entry>
                              <def:key/>
                              <!--Optional:-->
                              <def:value>
                                 <!--Optional:-->
                                 <bin:children>
                                    <!--Zero or more repetitions:-->
                                    <bin:IBoundNode/>
                                 </bin:children>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <bin:literalExpression>?</bin:literalExpression>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <bin:lvalue>?</bin:lvalue>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <bin:staticTarget>?</bin:staticTarget>
                                 <!--Optional:-->
                                 <bin:syntaxNode>
                                    <!--Optional:-->
                                    <syn:module>
                                       <!--Optional:-->
                                       <sour:byteStream/>
                                       <!--Optional:-->
                                       <sour:characterStream/>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <sour:code>?</sour:code>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <sour:modified>?</sour:modified>
                                       <!--Optional:-->
                                       <sour:params>
                                          <!--Zero or more repetitions:-->
                                          <def:entry>
                                             <!--type: string-->
                                             <def:key>?</def:key>
                                             <!--Optional:-->
                                             <def:value>?</def:value>
                                          </def:entry>
                                       </sour:params>
                                       <!--Optional:-->
                                       <!--type: int-->
                                       <sour:startPosition>?</sour:startPosition>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <sour:uri>?</sour:uri>
                                    </syn:module>
                                    <!--Optional:-->
                                    <!--type: int-->
                                    <syn:numberOfChildren>?</syn:numberOfChildren>
                                    <!--Optional:-->
                                    <syn:parent/>
                                    <!--Optional:-->
                                    <syn:sourceLocation>
                                       <!--Optional:-->
                                       <text:end/>
                                       <!--Optional:-->
                                       <text:start/>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <text:textLocation>?</text:textLocation>
                                    </syn:sourceLocation>
                                    <!--Optional:-->
                                    <!--type: string-->
                                    <syn:type>?</syn:type>
                                 </bin:syntaxNode>
                                 <!--Optional:-->
                                 <bin:targetNode/>
                                 <!--Optional:-->
                                 <bin:type/>
                              </def:value>
                           </def:entry>
                        </bin:typesMap>
                     </typ:dependencies>
                     <!--Optional:-->
                     <typ:properties>
                        <!--Zero or more repetitions:-->
                        <def:entry>
                           <!--type: string-->
                           <def:key>?</def:key>
                           <!--Optional:-->
                           <def:value>?</def:value>
                        </def:entry>
                     </typ:properties>
                     <!--Optional:-->
                     <typ:syntaxNode>
                        <!--Optional:-->
                        <syn:module>
                           <!--Optional:-->
                           <sour:byteStream/>
                           <!--Optional:-->
                           <sour:characterStream/>
                           <!--Optional:-->
                           <!--type: string-->
                           <sour:code>?</sour:code>
                           <!--Optional:-->
                           <!--type: boolean-->
                           <sour:modified>?</sour:modified>
                           <!--Optional:-->
                           <sour:params>
                              <!--Zero or more repetitions:-->
                              <def:entry>
                                 <!--type: string-->
                                 <def:key>?</def:key>
                                 <!--Optional:-->
                                 <def:value>?</def:value>
                              </def:entry>
                           </sour:params>
                           <!--Optional:-->
                           <!--type: int-->
                           <sour:startPosition>?</sour:startPosition>
                           <!--Optional:-->
                           <!--type: string-->
                           <sour:uri>?</sour:uri>
                        </syn:module>
                        <!--Optional:-->
                        <!--type: int-->
                        <syn:numberOfChildren>?</syn:numberOfChildren>
                        <!--Optional:-->
                        <syn:parent/>
                        <!--Optional:-->
                        <syn:sourceLocation>
                           <!--Optional:-->
                           <text:end/>
                           <!--Optional:-->
                           <text:start/>
                           <!--Optional:-->
                           <!--type: boolean-->
                           <text:textLocation>?</text:textLocation>
                        </syn:sourceLocation>
                        <!--Optional:-->
                        <!--type: string-->
                        <syn:type>?</syn:type>
                     </typ:syntaxNode>
                  </typ:info>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <typ:static>?</typ:static>
                  <!--Optional:-->
                  <typ:type/>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <typ:const>?</typ:const>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <typ:readable>?</typ:readable>
                  <!--Optional:-->
                  <!--type: boolean-->
                  <typ:writable>?</typ:writable>
               </typ:indexField>
               <!--Optional:-->
               <typ:methods>
                  <!--Zero or more repetitions:-->
                  <typ:IOpenMethod>
                     <!--Optional:-->
                     <typ:declaringClass/>
                     <!--Optional:-->
                     <typ:info>
                        <!--Optional:-->
                        <!--type: string-->
                        <meta:sourceUrl>?</meta:sourceUrl>
                        <!--Optional:-->
                        <typ:dependencies>
                           <!--Optional:-->
                           <bin:assigned>
                              <!--Zero or more repetitions:-->
                              <typ:IOpenField>
                                 <!--Optional:-->
                                 <!--type: string-->
                                 <base:name>?</base:name>
                                 <!--Optional:-->
                                 <typ:declaringClass/>
                                 <!--Optional:-->
                                 <typ:info/>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <typ:static>?</typ:static>
                                 <!--Optional:-->
                                 <typ:type/>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <typ:const>?</typ:const>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <typ:readable>?</typ:readable>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <typ:writable>?</typ:writable>
                              </typ:IOpenField>
                           </bin:assigned>
                           <!--Optional:-->
                           <bin:assignedMap>
                              <!--Zero or more repetitions:-->
                              <def:entry>
                                 <def:key>
                                    <!--Optional:-->
                                    <!--type: string-->
                                    <base:name>?</base:name>
                                    <!--Optional:-->
                                    <typ:declaringClass/>
                                    <!--Optional:-->
                                    <typ:info/>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:static>?</typ:static>
                                    <!--Optional:-->
                                    <typ:type/>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:const>?</typ:const>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:readable>?</typ:readable>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:writable>?</typ:writable>
                                 </def:key>
                                 <!--Optional:-->
                                 <def:value>
                                    <!--Optional:-->
                                    <bin:children>
                                       <!--Zero or more repetitions:-->
                                       <bin:IBoundNode/>
                                    </bin:children>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:literalExpression>?</bin:literalExpression>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:lvalue>?</bin:lvalue>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:staticTarget>?</bin:staticTarget>
                                    <!--Optional:-->
                                    <bin:syntaxNode>
                                       <!--Optional:-->
                                       <syn:module>
                                          <!--Optional:-->
                                          <sour:byteStream/>
                                          <!--Optional:-->
                                          <sour:characterStream/>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <sour:code>?</sour:code>
                                          <!--Optional:-->
                                          <!--type: boolean-->
                                          <sour:modified>?</sour:modified>
                                          <!--Optional:-->
                                          <sour:params>
                                             <!--Zero or more repetitions:-->
                                             <def:entry>
                                                <!--type: string-->
                                                <def:key>?</def:key>
                                                <!--Optional:-->
                                                <def:value>?</def:value>
                                             </def:entry>
                                          </sour:params>
                                          <!--Optional:-->
                                          <!--type: int-->
                                          <sour:startPosition>?</sour:startPosition>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <sour:uri>?</sour:uri>
                                       </syn:module>
                                       <!--Optional:-->
                                       <!--type: int-->
                                       <syn:numberOfChildren>?</syn:numberOfChildren>
                                       <!--Optional:-->
                                       <syn:parent/>
                                       <!--Optional:-->
                                       <syn:sourceLocation>
                                          <!--Optional:-->
                                          <text:end/>
                                          <!--Optional:-->
                                          <text:start/>
                                          <!--Optional:-->
                                          <!--type: boolean-->
                                          <text:textLocation>?</text:textLocation>
                                       </syn:sourceLocation>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <syn:type>?</syn:type>
                                    </bin:syntaxNode>
                                    <!--Optional:-->
                                    <bin:targetNode/>
                                    <!--Optional:-->
                                    <bin:type/>
                                 </def:value>
                              </def:entry>
                           </bin:assignedMap>
                           <!--Optional:-->
                           <bin:fieldNodes>
                              <!--Zero or more repetitions:-->
                              <bin:IBoundNode>
                                 <!--Optional:-->
                                 <bin:children/>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <bin:literalExpression>?</bin:literalExpression>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <bin:lvalue>?</bin:lvalue>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <bin:staticTarget>?</bin:staticTarget>
                                 <!--Optional:-->
                                 <bin:syntaxNode>
                                    <!--Optional:-->
                                    <syn:module>
                                       <!--Optional:-->
                                       <sour:byteStream/>
                                       <!--Optional:-->
                                       <sour:characterStream/>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <sour:code>?</sour:code>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <sour:modified>?</sour:modified>
                                       <!--Optional:-->
                                       <sour:params>
                                          <!--Zero or more repetitions:-->
                                          <def:entry>
                                             <!--type: string-->
                                             <def:key>?</def:key>
                                             <!--Optional:-->
                                             <def:value>?</def:value>
                                          </def:entry>
                                       </sour:params>
                                       <!--Optional:-->
                                       <!--type: int-->
                                       <sour:startPosition>?</sour:startPosition>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <sour:uri>?</sour:uri>
                                    </syn:module>
                                    <!--Optional:-->
                                    <!--type: int-->
                                    <syn:numberOfChildren>?</syn:numberOfChildren>
                                    <!--Optional:-->
                                    <syn:parent/>
                                    <!--Optional:-->
                                    <syn:sourceLocation>
                                       <!--Optional:-->
                                       <text:end/>
                                       <!--Optional:-->
                                       <text:start/>
                                       <!--Optional:-->
                                       <!--type: boolean-->
                                       <text:textLocation>?</text:textLocation>
                                    </syn:sourceLocation>
                                    <!--Optional:-->
                                    <!--type: string-->
                                    <syn:type>?</syn:type>
                                 </bin:syntaxNode>
                                 <!--Optional:-->
                                 <bin:targetNode/>
                                 <!--Optional:-->
                                 <bin:type/>
                              </bin:IBoundNode>
                           </bin:fieldNodes>
                           <!--Optional:-->
                           <bin:fieldsMap>
                              <!--Zero or more repetitions:-->
                              <def:entry>
                                 <def:key>
                                    <!--Optional:-->
                                    <bin:children>
                                       <!--Zero or more repetitions:-->
                                       <bin:IBoundNode/>
                                    </bin:children>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:literalExpression>?</bin:literalExpression>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:lvalue>?</bin:lvalue>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:staticTarget>?</bin:staticTarget>
                                    <!--Optional:-->
                                    <bin:syntaxNode>
                                       <!--Optional:-->
                                       <syn:module>
                                          <!--Optional:-->
                                          <sour:byteStream/>
                                          <!--Optional:-->
                                          <sour:characterStream/>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <sour:code>?</sour:code>
                                          <!--Optional:-->
                                          <!--type: boolean-->
                                          <sour:modified>?</sour:modified>
                                          <!--Optional:-->
                                          <sour:params>
                                             <!--Zero or more repetitions:-->
                                             <def:entry>
                                                <!--type: string-->
                                                <def:key>?</def:key>
                                                <!--Optional:-->
                                                <def:value>?</def:value>
                                             </def:entry>
                                          </sour:params>
                                          <!--Optional:-->
                                          <!--type: int-->
                                          <sour:startPosition>?</sour:startPosition>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <sour:uri>?</sour:uri>
                                       </syn:module>
                                       <!--Optional:-->
                                       <!--type: int-->
                                       <syn:numberOfChildren>?</syn:numberOfChildren>
                                       <!--Optional:-->
                                       <syn:parent/>
                                       <!--Optional:-->
                                       <syn:sourceLocation>
                                          <!--Optional:-->
                                          <text:end/>
                                          <!--Optional:-->
                                          <text:start/>
                                          <!--Optional:-->
                                          <!--type: boolean-->
                                          <text:textLocation>?</text:textLocation>
                                       </syn:sourceLocation>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <syn:type>?</syn:type>
                                    </bin:syntaxNode>
                                    <!--Optional:-->
                                    <bin:targetNode/>
                                    <!--Optional:-->
                                    <bin:type/>
                                 </def:key>
                                 <!--Optional:-->
                                 <def:value>
                                    <!--Optional:-->
                                    <!--type: string-->
                                    <base:name>?</base:name>
                                    <!--Optional:-->
                                    <typ:declaringClass/>
                                    <!--Optional:-->
                                    <typ:info/>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:static>?</typ:static>
                                    <!--Optional:-->
                                    <typ:type/>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:const>?</typ:const>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:readable>?</typ:readable>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:writable>?</typ:writable>
                                 </def:value>
                              </def:entry>
                           </bin:fieldsMap>
                           <!--Optional:-->
                           <bin:methods/>
                           <!--Optional:-->
                           <bin:rulesMethods>
                              <!--Zero or more repetitions:-->
                              <impl:ExecutableMethod>
                                 <!--Optional:-->
                                 <impl:declaringClass/>
                                 <!--Optional:-->
                                 <impl:header>
                                    <!--Optional:-->
                                    <!--type: string-->
                                    <base:name>?</base:name>
                                    <!--Optional:-->
                                    <typ:declaringClass/>
                                    <!--Optional:-->
                                    <typ:info/>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <typ:static>?</typ:static>
                                    <!--Optional:-->
                                    <typ:type/>
                                    <!--Optional:-->
                                    <typ:signature>
                                       <!--Optional:-->
                                       <!--type: int-->
                                       <typ:numberOfParameters>?</typ:numberOfParameters>
                                       <!--Optional:-->
                                       <typ:parameterTypes>
                                          <!--Zero or more repetitions:-->
                                          <typ:IOpenClass/>
                                       </typ:parameterTypes>
                                    </typ:signature>
                                 </impl:header>
                                 <!--Optional:-->
                                 <impl:info/>
                                 <!--Optional:-->
                                 <impl:method/>
                                 <!--Optional:-->
                                 <!--type: string-->
                                 <impl:moduleName>?</impl:moduleName>
                                 <!--Optional:-->
                                 <!--type: string-->
                                 <impl:name>?</impl:name>
                                 <!--Optional:-->
                                 <impl:signature>
                                    <!--Optional:-->
                                    <!--type: int-->
                                    <typ:numberOfParameters>?</typ:numberOfParameters>
                                    <!--Optional:-->
                                    <typ:parameterTypes>
                                       <!--Zero or more repetitions:-->
                                       <typ:IOpenClass/>
                                    </typ:parameterTypes>
                                 </impl:signature>
                                 <!--Optional:-->
                                 <!--type: boolean-->
                                 <impl:static>?</impl:static>
                                 <!--Optional:-->
                                 <impl:type/>
                              </impl:ExecutableMethod>
                           </bin:rulesMethods>
                           <!--Optional:-->
                           <bin:types>
                              <!--Zero or more repetitions:-->
                              <typ:IOpenClass/>
                           </bin:types>
                           <!--Optional:-->
                           <bin:typesMap>
                              <!--Zero or more repetitions:-->
                              <def:entry>
                                 <def:key/>
                                 <!--Optional:-->
                                 <def:value>
                                    <!--Optional:-->
                                    <bin:children>
                                       <!--Zero or more repetitions:-->
                                       <bin:IBoundNode/>
                                    </bin:children>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:literalExpression>?</bin:literalExpression>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:lvalue>?</bin:lvalue>
                                    <!--Optional:-->
                                    <!--type: boolean-->
                                    <bin:staticTarget>?</bin:staticTarget>
                                    <!--Optional:-->
                                    <bin:syntaxNode>
                                       <!--Optional:-->
                                       <syn:module>
                                          <!--Optional:-->
                                          <sour:byteStream/>
                                          <!--Optional:-->
                                          <sour:characterStream/>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <sour:code>?</sour:code>
                                          <!--Optional:-->
                                          <!--type: boolean-->
                                          <sour:modified>?</sour:modified>
                                          <!--Optional:-->
                                          <sour:params>
                                             <!--Zero or more repetitions:-->
                                             <def:entry>
                                                <!--type: string-->
                                                <def:key>?</def:key>
                                                <!--Optional:-->
                                                <def:value>?</def:value>
                                             </def:entry>
                                          </sour:params>
                                          <!--Optional:-->
                                          <!--type: int-->
                                          <sour:startPosition>?</sour:startPosition>
                                          <!--Optional:-->
                                          <!--type: string-->
                                          <sour:uri>?</sour:uri>
                                       </syn:module>
                                       <!--Optional:-->
                                       <!--type: int-->
                                       <syn:numberOfChildren>?</syn:numberOfChildren>
                                       <!--Optional:-->
                                       <syn:parent/>
                                       <!--Optional:-->
                                       <syn:sourceLocation>
                                          <!--Optional:-->
                                          <text:end/>
                                          <!--Optional:-->
                                          <text:start/>
                                          <!--Optional:-->
                                          <!--type: boolean-->
                                          <text:textLocation>?</text:textLocation>
                                       </syn:sourceLocation>
                                       <!--Optional:-->
                                       <!--type: string-->
                                       <syn:type>?</syn:type>
                                    </bin:syntaxNode>
                                    <!--Optional:-->
                                    <bin:targetNode/>
                                    <!--Optional:-->
                                    <bin:type/>
                                 </def:value>
                              </def:entry>
                           </bin:typesMap>
                        </typ:dependencies>
                        <!--Optional:-->
                        <typ:properties>
                           <!--Zero or more repetitions:-->
                           <def:entry>
                              <!--type: string-->
                              <def:key>?</def:key>
                              <!--Optional:-->
                              <def:value>?</def:value>
                           </def:entry>
                        </typ:properties>
                        <!--Optional:-->
                        <typ:syntaxNode>
                           <!--Optional:-->
                           <syn:module>
                              <!--Optional:-->
                              <sour:byteStream/>
                              <!--Optional:-->
                              <sour:characterStream/>
                              <!--Optional:-->
                              <!--type: string-->
                              <sour:code>?</sour:code>
                              <!--Optional:-->
                              <!--type: boolean-->
                              <sour:modified>?</sour:modified>
                              <!--Optional:-->
                              <sour:params>
                                 <!--Zero or more repetitions:-->
                                 <def:entry>
                                    <!--type: string-->
                                    <def:key>?</def:key>
                                    <!--Optional:-->
                                    <def:value>?</def:value>
                                 </def:entry>
                              </sour:params>
                              <!--Optional:-->
                              <!--type: int-->
                              <sour:startPosition>?</sour:startPosition>
                              <!--Optional:-->
                              <!--type: string-->
                              <sour:uri>?</sour:uri>
                           </syn:module>
                           <!--Optional:-->
                           <!--type: int-->
                           <syn:numberOfChildren>?</syn:numberOfChildren>
                           <!--Optional:-->
                           <syn:parent/>
                           <!--Optional:-->
                           <syn:sourceLocation>
                              <!--Optional:-->
                              <text:end/>
                              <!--Optional:-->
                              <text:start/>
                              <!--Optional:-->
                              <!--type: boolean-->
                              <text:textLocation>?</text:textLocation>
                           </syn:sourceLocation>
                           <!--Optional:-->
                           <!--type: string-->
                           <syn:type>?</syn:type>
                        </typ:syntaxNode>
                     </typ:info>
                     <!--Optional:-->
                     <typ:method/>
                     <!--Optional:-->
                     <!--type: string-->
                     <typ:name>?</typ:name>
                     <!--Optional:-->
                     <typ:signature>
                        <!--Optional:-->
                        <!--type: int-->
                        <typ:numberOfParameters>?</typ:numberOfParameters>
                        <!--Optional:-->
                        <typ:parameterTypes>
                           <!--Zero or more repetitions:-->
                           <typ:IOpenClass/>
                        </typ:parameterTypes>
                     </typ:signature>
                     <!--Optional:-->
                     <!--type: boolean-->
                     <typ:static>?</typ:static>
                     <!--Optional:-->
                     <typ:type/>
                  </typ:IOpenMethod>
               </typ:methods>
               <!--Optional:-->
               <!--type: string-->
               <typ:name>?</typ:name>
               <!--Optional:-->
               <!--type: string-->
               <typ:nameSpace>?</typ:nameSpace>
               <!--Optional:-->
               <typ:openClass/>
               <!--Optional:-->
               <!--type: boolean-->
               <typ:simple>?</typ:simple>
               <!--Optional:-->
               <typ:types>
                  <!--Zero or more repetitions:-->
                  <def:entry>
                     <!--type: string-->
                     <def:key>?</def:key>
                     <!--Optional:-->
                     <def:value/>
                  </def:entry>
               </typ:types>
            </impl:type>
            <!--Optional:-->
            <!--type: boolean-->
            <prop:active>?</prop:active>
            <!--Optional:-->
            <prop:allDimensionalProperties>
               <!--Zero or more repetitions:-->
               <def:entry>
                  <!--type: string-->
                  <def:key>?</def:key>
                  <!--Optional:-->
                  <def:value>?</def:value>
               </def:entry>
            </prop:allDimensionalProperties>
            <!--Optional:-->
            <prop:allProperties>
               <!--Zero or more repetitions:-->
               <def:entry>
                  <!--type: string-->
                  <def:key>?</def:key>
                  <!--Optional:-->
                  <def:value>?</def:value>
               </def:entry>
            </prop:allProperties>
            <!--Optional:-->
            <!--type: boolean-->
            <prop:autoType>?</prop:autoType>
            <!--Optional:-->
            <!--type: string-->
            <prop:buildPhase>?</prop:buildPhase>
            <!--Optional:-->
            <prop:caProvinces>
               <!--Zero or more repetitions:-->
               <!--type: CaProvincesEnum - enumeration: [AB,BC,PE,MB,NB,NS,NU,ON,QC,SK,NL,YT,NT]-->
               <enum:CaProvincesEnum>?</enum:CaProvincesEnum>
            </prop:caProvinces>
            <!--Optional:-->
            <prop:caRegions>
               <!--Zero or more repetitions:-->
               <!--type: CaRegionsEnum - enumeration: [QC,HQ]-->
               <enum:CaRegionsEnum>?</enum:CaRegionsEnum>
            </prop:caRegions>
            <!--Optional:-->
            <!--type: boolean-->
            <prop:cacheable>?</prop:cacheable>
            <!--Optional:-->
            <!--type: string-->
            <prop:category>?</prop:category>
            <!--Optional:-->
            <prop:country>
               <!--Zero or more repetitions:-->
               <!--type: CountriesEnum - enumeration: [AL,DZ,AR,AU,AT,BH,BY,BE,BO,BA,BR,BG,CA,CL,CN,CO,CR,HR,CY,CZ,DK,DO,EC,EG,SV,EE,FI,FR,DE,GR,GT,HN,HK,HU,IS,IN,ID,IQ,IE,IL,IT,JP,JO,KW,LV,LB,LT,LU,MK,MY,MT,MX,MA,NL,NZ,NI,NO,OM,PA,PY,PE,PH,PL,PT,PR,QA,RO,RU,SA,CS,SG,SK,SI,ZA,ES,SD,SE,CH,SY,TW,TH,TN,TR,UA,AE,GB,US,UY,VE,VN,YE]-->
               <enum:CountriesEnum>?</enum:CountriesEnum>
            </prop:country>
            <!--Optional:-->
            <!--type: string-->
            <prop:createdBy>?</prop:createdBy>
            <!--Optional:-->
            <!--type: dateTime-->
            <prop:createdOn>?</prop:createdOn>
            <!--Optional:-->
            <prop:currency>
               <!--Zero or more repetitions:-->
               <!--type: CurrenciesEnum - enumeration: [ALL,DZD,ARS,AUD,BHD,BYR,BOB,BAM,BRL,CAD,CLP,CNY,COP,CRC,HRK,CZK,DKK,DOP,EGP,EUR,GTQ,HNL,HKD,HUF,ISK,INR,IDR,IQD,ILS,JPY,JOD,KWD,LVL,LBP,LTL,MKD,MYR,MXN,MAD,NZD,NIO,NOK,OMR,PAB,PYG,PEN,PHP,PLN,QAR,RON,RUB,SAR,RSD,SGD,ZAR,SDG,SEK,CHF,SYP,TWD,TND,TRY,UAH,AED,GBP,USD,UYU,VEF,VND,YER]-->
               <enum:CurrenciesEnum>?</enum:CurrenciesEnum>
            </prop:currency>
            <!--Optional:-->
            <!--type: string-->
            <prop:currentTableType>?</prop:currentTableType>
            <!--Optional:-->
            <prop:custom1>
               <!--Zero or more repetitions:-->
               <!--type: string-->
               <def:string>?</def:string>
            </prop:custom1>
            <!--Optional:-->
            <prop:custom2>
               <!--Zero or more repetitions:-->
               <!--type: string-->
               <def:string>?</def:string>
            </prop:custom2>
            <!--Optional:-->
            <!--type: string-->
            <prop:datatypePackage>?</prop:datatypePackage>
            <!--Optional:-->
            <!--type: string-->
            <prop:description>?</prop:description>
            <!--Optional:-->
            <!--type: dateTime-->
            <prop:effectiveDate>?</prop:effectiveDate>
            <!--Optional:-->
            <!--type: dateTime-->
            <prop:endRequestDate>?</prop:endRequestDate>
            <!--Optional:-->
            <!--type: dateTime-->
            <prop:expirationDate>?</prop:expirationDate>
            <!--Optional:-->
            <prop:externalPropertiesAppliedForModule>
               <!--Zero or more repetitions:-->
               <def:entry>
                  <!--type: string-->
                  <def:key>?</def:key>
                  <!--Optional:-->
                  <def:value>?</def:value>
               </def:entry>
            </prop:externalPropertiesAppliedForModule>
            <!--Optional:-->
            <!--type: boolean-->
            <prop:failOnMiss>?</prop:failOnMiss>
            <!--Optional:-->
            <!--type: string-->
            <prop:id>?</prop:id>
            <!--Optional:-->
            <prop:lang>
               <!--Zero or more repetitions:-->
               <!--type: LanguagesEnum - enumeration: [ALB,ARA,BEL,BUL,CAT,CHI,SCR,CZE,DAN,DUT,ENG,FIN,FRE,GER,GRE,HEB,HIN,HUN,IND,GLE,ITA,JPN,LAV,LIT,MAC,MAY,MLT,NOR,POL,POR,RUM,RUS,SCC,SLO,SPA,THA,TUR,UKR,VIE]-->
               <enum:LanguagesEnum>?</enum:LanguagesEnum>
            </prop:lang>
            <!--Optional:-->
            <!--type: string-->
            <prop:lob>?</prop:lob>
            <!--Optional:-->
            <!--type: string-->
            <prop:modifiedBy>?</prop:modifiedBy>
            <!--Optional:-->
            <!--type: dateTime-->
            <prop:modifiedOn>?</prop:modifiedOn>
            <!--Optional:-->
            <!--type: string-->
            <prop:name>?</prop:name>
            <!--Optional:-->
            <!--type: OriginsEnum - enumeration: [Base,Deviation]-->
            <prop:origin>?</prop:origin>
            <!--Optional:-->
            <!--type: string-->
            <prop:precision>?</prop:precision>
            <!--Optional:-->
            <prop:propertiesAppliedByDefault>
               <!--Zero or more repetitions:-->
               <def:entry>
                  <!--type: string-->
                  <def:key>?</def:key>
                  <!--Optional:-->
                  <def:value>?</def:value>
               </def:entry>
            </prop:propertiesAppliedByDefault>
            <!--Optional:-->
            <prop:propertiesAppliedForCategory>
               <!--Zero or more repetitions:-->
               <def:entry>
                  <!--type: string-->
                  <def:key>?</def:key>
                  <!--Optional:-->
                  <def:value>?</def:value>
               </def:entry>
            </prop:propertiesAppliedForCategory>
            <!--Optional:-->
            <prop:propertiesAppliedForModule>
               <!--Zero or more repetitions:-->
               <def:entry>
                  <!--type: string-->
                  <def:key>?</def:key>
                  <!--Optional:-->
                  <def:value>?</def:value>
               </def:entry>
            </prop:propertiesAppliedForModule>
            <!--Optional:-->
            <prop:propertiesDefinedInTable>
               <!--Zero or more repetitions:-->
               <def:entry>
                  <!--type: string-->
                  <def:key>?</def:key>
                  <!--Optional:-->
                  <def:value>?</def:value>
               </def:entry>
            </prop:propertiesDefinedInTable>
            <!--Optional:-->
            <prop:propertiesDefinedInTableIgnoreSystem>
               <!--Zero or more repetitions:-->
               <def:entry>
                  <!--type: string-->
                  <def:key>?</def:key>
                  <!--Optional:-->
                  <def:value>?</def:value>
               </def:entry>
            </prop:propertiesDefinedInTableIgnoreSystem>
            <!--Optional:-->
            <!--type: boolean-->
            <prop:propertiesEmpty>?</prop:propertiesEmpty>
            <!--Optional:-->
            <!--type: RecalculateEnum - enumeration: [ALWAYS,NEVER,ANALYZE]-->
            <prop:recalculate>?</prop:recalculate>
            <!--Optional:-->
            <prop:region>
               <!--Zero or more repetitions:-->
               <!--type: RegionsEnum - enumeration: [NCSA,EU,EMEA,APJ]-->
               <enum:RegionsEnum>?</enum:RegionsEnum>
            </prop:region>
            <!--Optional:-->
            <!--type: string-->
            <prop:scope>?</prop:scope>
            <!--Optional:-->
            <!--type: dateTime-->
            <prop:startRequestDate>?</prop:startRequestDate>
            <!--Optional:-->
            <prop:state>
               <!--Zero or more repetitions:-->
               <!--type: UsStatesEnum - enumeration: [AL,AK,AZ,AR,CA,CO,CT,DC,DE,FL,GA,HI,ID,IL,IN,IA,KS,KY,LA,ME,MD,MA,MI,MN,MS,MO,MT,NE,NV,NH,NJ,NM,NY,NC,ND,OH,OK,OR,PA,PR,RI,SC,SD,TN,TX,UT,VT,VA,WA,WV,WI,WY]-->
               <enum:UsStatesEnum>?</enum:UsStatesEnum>
            </prop:state>
            <!--Optional:-->
            <prop:tags>
               <!--Zero or more repetitions:-->
               <!--type: string-->
               <def:string>?</def:string>
            </prop:tags>
            <!--Optional:-->
            <prop:transaction>
               <!--Zero or more repetitions:-->
               <!--type: string-->
               <def:string>?</def:string>
            </prop:transaction>
            <!--Optional:-->
            <prop:usregion>
               <!--Zero or more repetitions:-->
               <!--type: UsRegionsEnum - enumeration: [MW,NE,SE,SW,W]-->
               <enum:UsRegionsEnum>?</enum:UsRegionsEnum>
            </prop:usregion>
            <!--Optional:-->
            <!--type: ValidateDTEnum - enumeration: [ON,OFF]-->
            <prop:validateDT>?</prop:validateDT>
            <!--Optional:-->
            <!--type: string-->
            <prop:version>?</prop:version>
         </def:return>
      </def:getPresupuestoGerenciaResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://DefaultNamespace/DEFAULT_ReglasKallSonysPortType/getPresupuestoGerenciaResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="MontoMaximo" id="a26ebe10-321b-463e-8287-a2c114b99f7f" interface="DEFAULT_ReglasKallSonysSoapBinding" operation="MontoMaximo"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="ab2e356b-ae33-4a9a-ab8b-feaf00964035" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:def="http://DefaultNamespace">
   <soapenv:Header/>
   <soapenv:Body>
      <def:MontoMaximoResponse>
         <!--Optional:-->
         <!--type: decimal-->
         <def:return>?</def:return>
      </def:MontoMaximoResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://DefaultNamespace/DEFAULT_ReglasKallSonysPortType/MontoMaximoResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="ValidacionTarjeta" id="13803672-5895-4505-a860-df7f0cd5a122" interface="DEFAULT_ReglasKallSonysSoapBinding" operation="ValidacionTarjeta"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="e26514db-b022-4705-bb0e-122677be9862" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:def="http://DefaultNamespace">
   <soapenv:Header/>
   <soapenv:Body>
      <def:ValidacionTarjetaResponse>
         <!--Optional:-->
         <!--type: boolean-->
         <def:return>?</def:return>
      </def:ValidacionTarjetaResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://DefaultNamespace/DEFAULT_ReglasKallSonysPortType/ValidacionTarjetaResponse"/></con:response><con:dispatchConfig/></con:mockOperation></con:mockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/></con:soapui-project>